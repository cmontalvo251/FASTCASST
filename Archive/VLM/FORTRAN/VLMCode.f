C Program for VLM CAT
C
C PROGRAM VLMX
C
C W.H. MASON, FEBRUARY 1989
C
C CLASSIC VORTEX LATTICE METHOD
C MODEL PROBLEM: TRAPEZOIDAL WING
C FIRST MODIFIED BY SAM MAGILL 020602
C FINAL MODIFICATION BY SAM MAGILL 032702
C VLM FOR COMPOUND AIRCRAFT TRANSPORT
C MULTIPLE AIRCRAFT: MOTHERSHIP + HITCHHIKER(S)
C SYSTEM SYMMETRY ABOUT CENTERLINE OF MOTHERSHIP
C ALL COORDINATES INPUTTED ABOUT INDIVIDUAL AIRCRAFT CENTERLINE
C
      COMMON /COF/ C(5001,5002),NEQNS
      COMMON /CONST/ PI,COEFH
      DIMENSION Y1(800),Y2(800),Z1(800),Z2(800),X1(800),X2(800),
     & XVCPT(800),YCPT(800),ZCPT(800),XCPT(800),GAMMA(800),CHRD(200)
      DIMENSION Y11(800),Y21(800),Z11(800),Z21(800),X11(800),X21(800),
     & XVCPT1(800),YCPT1(800),ZCPT1(800),XCPT1(800),GAMMA1(800),
     & CHRD1(200)
      DIMENSION Y12(800,800),Y22(800,800),Z12(800,800),Z22(800,800),
     & X12(800,800),X22(800,800),
     & XVCPT2(800,800),YCPT2(800,800),ZCPT2(800,800),
     & XCP T2(800,800),GAMMA2(800,800),
     & CHRD2(200,200)
      DIMENSION YROOT2(800),XRTLE2(800),XRTTE2(800),YTIP2(800),
     & XTIPLE2(800),XTIPTE2(800),NSPAN2(800),NCHRD2(800)
      DIMENSION XNSPAN2(800),XNCHRD2(800),DXDYLE2(800),DXDYTE2(800),
     & CROOT2(800),CTIP2(800),B22(800),SREF2(800),AR2(800),
     & XLESWP2(800),XTESWP2(800),CAV2(800),TAPER2(800),
     & XREF2(800),CREF2(800),DELTAY2(800),XNS2(800),
     & YINBD2(800),CL2(800),CM2(800),ARRAY(800),
     & YOUTBD2(800),X1LEG2(800),X2LEG2(800),X1TEG2(800),
     & X2TEG2(800),YCPTG2(800),DELCPT2(800),NTOT2(800),L(800),
     & XCPTLE2(800),XCPTTE2(800),C12(800),C22(800),CCPT2(800),
     & DELC12(800),DELC22(800),XNC2(800),XSTAR(800),YSTAR(800),
     & ZSTAR(800),SUMCL2(800),SUMCM2(800),
     & ETA2(800,800), CLLOC2(800,800),CCLCA2(800,800),SUM2(800)
      DIMENSION
     & DOWN1(800),
     & DOWN2(800,800),CDI2(20),
     & SUMCDI2(20),SUMD2(20),CDILOC2(400,40),WV(1000),
     & CV(2000,2000)
      REAL XSTR, YSTR, ZSTR
      CHARACTER*1 ANS, SPACE
      LOGICAL GEOMSPC, NGEOMSPC, GEOM, SPC
C     
      PI = 3.1415926585
      COEFH = 1.0/(4.0*PI)
      IREAD = 5
      IWRIT = 6
      WRITE(IWRIT,1000)
      OPEN(UNIT = 1, FILE = 'GEOM.DAT',STATUS = 'NEW')
      OPEN(UNIT = 2, FILE = 'GAMMA.DAT',STATUS = 'NEW')
      OPEN(UNIT = 3, FILE = 'DOWN.DAT',STATUS = 'NEW')
      OPEN(UNIT = 4, FILE = 'COEF.DAT',STATUS = 'NEW')
C     C
C     DEFINE PLANFORM FOR MOTHERSHIP: AIRCRAFT 1
C     
      WRITE(IWRIT,1010)
!      %READ (IREAD,*) YROOT1,XRTLE1,XRTTE1
      YROOT1 = 0.0;
      XRTLE1 = 0.0;
      XRTTE1 = 1.5;
      WRITE(IWRIT,1020)
!      %READ (IREAD,*) YTIP1,XTIPLE1,XTIPTE1
      YTIP1 = 1.4121
      XTIPLE1 = 1.91421
      XTIPTE1 = 2.41421
      WRITE(IWRIT,1030)
      !READ (IREAD,*) NSPAN1,NCHRD1
      NSPAN1 = 10
      NCHRD1 = 10
C     
      XNSPAN1 = NSPAN1
      XNCHRD1 = NCHRD1
      DXDYLE1 = (XTIPLE1 - XRTLE1)/(YTIP1 - YROOT1)
      DXDYTE1 = (XTIPTE1 - XRTTE1)/(YTIP1 - YROOT1)

C     
C     DEFINE PLANFORM FOR HITCHHIKER: FOLLOW 'IF STATEMENT' IF ALL HITCHHIKERS HAVE
C     SAME GEOMETRY AND EQUAL SPACING: IF JUST HAVE SAME GEOMTRY: IF JUST HAVE
C     EQUAL SPACING: IF ARE NEITHER EQUALLY SPACED OR SAME GEOMETRY
C     C

      WRITE(IWRIT,1017)
      !READ(IREAD,*) NAC
      NAC = 1
      WRITE(IWRIT,1021)
      WRITE(IWRIT,1018)
      !READ(IREAD, 99) ANS
      ANS = 'Y'
      WRITE(IWRIT, 1019)
      !%READ(IREAD, 99) SPACE
      SPACE = 'Y'
      WRITE(IWRIT,1016)
      GEOMSPC = .FALSE.
      NGEOMSPC = .FALSE.
      GEOM = .FALSE.
      SPC = .FALSE.

C     
C     HITCHHIKERS HAVE SAME GEOMETRY AND EQUAL SPACING
C     

      IF ((ANS.EQ.'Y').AND.(SPACE.EQ.'Y'))THEN
         GEOMSPC = .TRUE.
      END IF
C     
      IF ((ANS.EQ.'Y').AND.(SPACE.EQ.'N')) THEN
         GEOM = .TRUE.
      END IF
C     
      IF ((ANS.EQ.'N').AND.(SPACE.EQ.'Y')) THEN
         SPC = .TRUE.
      END IF
C     
      IF ((ANS.EQ.'N').AND.(SPACE.EQ.'N')) THEN
         NGEOMSPC = .TRUE.
      END IF
C     
C     GEOMETRIC PARAMETERS WITH 'S' PREFIX ARE SCREEN INPUT VALUES
C     
      IF (GEOMSPC) THEN
         NNAC = 0
         WRITE(IWRIT,*)'FOR ALL HITCHHIKERS'
         WRITE(IWRIT,1015)NAC
         !READ(IREAD,*) SYROOT2,SXRTLE2,SXRTTE2
         SYROOT2 = 0.0
         SXRTLE2 = 0.0
         SXRTTE2 = 0.0
         WRITE(IWRIT,1025)NAC
         !READ(IREAD,*) SYTIP2,SXTIPLE2,SXTIPTE2
         SYTIP2 = 1.4121
         SXTIPLE2 = 1.91421
         SXTIPTE2 = 2.41421
         WRITE(IWRIT,1035)NAC
         !READ(IREAD,*) SNSPAN2,SNCHRD2
         SNSPAN2 = 10
         SNCHRD2 = 10
         WRITE(IWRIT,1036)NAC
         !READ(IREAD,*) XSTR, YSTR, ZSTR
         XSTR = 3.91421
         YSTR = 2.8242
         ZSTR = 0.0
C     
C     XSTRH,YSTRH,ZSTRH ARE COUNTERS
C     
         XSTRH = 0.0
         YSTRH = 0.0
         ZSTRH = 0.0
C     
      DO 601 NNAC = 1,NAC
         YROOT2(NNAC) = SYROOT2
         XRTLE2(NNAC) = SXRTLE2
         XRTTE2(NNAC) = SXRTTE2
         YTIP2(NNAC) = SYTIP2
         XTIPLE2(NNAC) = SXTIPLE2
         XTIPTE2(NNAC) = SXTIPTE2
         NSPAN2(NNAC) = SNSPAN2
         NCHRD2(NNAC) = SNCHRD2
         XNSPAN2(NNAC) = NSPAN2(NNAC)
         XSTAR(NNAC) = XSTRH + XSTR
         XSTRH = XSTAR(NNAC)
         YSTAR(NNAC) = YSTRH + YSTR
         YSTRH = YSTAR(NNAC)
         ZSTAR(NNAC) = ZSTRH + ZSTR
         ZSTRH = ZSTAR(NNAC)
         XNCHRD2(NNAC) = NCHRD2(NNAC)
         DXDYLE2(NNAC) = ((XTIPLE2(NNAC) - XRTLE2(NNAC)))/
     & (YTIP2(NNAC) - YROOT2(NNAC))
         DXDYTE2(NNAC) = ((XTIPTE2(NNAC) - XRTTE2(NNAC)))
     & /(YTIP2(NNAC) - YROOT2(NNAC))
 601  CONTINUE
      END IF
C     
C     HITCHHIKERS HAVE SAME GEOMETRY BUT UNEQUALLY SPACED
C     C
      IF (GEOM) THEN
         NNAC = 0
         WRITE(IWRIT,1015)NAC
         READ(IREAD,*) SYROOT2,SXRTLE2,SXRTTE2
         WRITE(IWRIT,1025)NAC
         READ(IREAD,*) SYTIP2,SXTIPLE2,SXTIPTE2
         WRITE(IWRIT,1035)NAC
         READ(IREAD,*) SNSPAN2,SNCHRD2
C     
      DO 602 NNAC = 1,NAC
         YROOT2(NNAC) = SYROOT2
         XRTLE2(NNAC) = SXRTLE2
         XRTTE2(NNAC) = SXRTTE2
         YTIP2(NNAC) = SYTIP2
         XTIPLE2(NNAC) = SXTIPLE2
         XTIPTE2(NNAC) = SXTIPTE2
         NSPAN2(NNAC) = SNSPAN2
         NCHRD2(NNAC) = SNCHRD2
         WRITE(IWRIT,1036)NNAC
         READ(IREAD,*) XSTAR(NNAC), YSTAR(NNAC), ZSTAR(NNAC)
         XNSPAN2(NNAC) = NSPAN2(N NAC)
         XNCHRD2(NNAC) = NCHRD2(NNAC)
         DXDYLE2(NNAC) = ((XTIPLE2(NNAC) - XRTLE2(NNAC)))/
     & (YTIP2(NNAC) - YROOT2(NNAC))
         DXDYTE2(NNAC) = ((XTIPTE2(NNAC) - XRTTE2(NNAC)))
     & /(YTIP2(NNAC) - YROOT2(NNAC))
 602  CONTINUE
      END IF
C     
C     HITCHHIKERS ARE UNEQUALLY SPACED AND DIFFERENT GEOMETRY
C     
      IF (NGEOMSPC) THEN
         NNAC = 0
         DO 600 NNAC = 1, NAC
         WRITE(*,*) ANS, SPACE, NGEOMSPC
         WRITE(*,*)'reading unequal'
         WRITE(IWRIT,1015)NNAC
         READ(IREAD,*) YROOT2(NNAC),XRTLE2(NNAC),XRTTE2(NNAC)
         WRITE(IWRIT,1025)NNAC
         READ(IREAD,*) YTIP2(NNAC),XTIPLE2(NNAC),XTIPTE2(NNAC)
         WRITE(IWRIT,1035)NNAC
         READ(IREAD,*) NSPAN2(NNAC),NCHRD2(NNAC)
         WRITE(IWRIT,1036)NNAC
         READ(IREAD,*) XSTAR(NNAC), YSTAR(NNAC), ZSTAR(NNAC)
         XNSPAN2(NNAC) = NSPAN2(NNAC)
         XNCHRD2(NNAC) = NCHRD2(NNAC)
         DXDYLE2(NNAC) = ((XTIPLE2(NNAC) - XRTLE2(NNAC)))/
     & (YTIP2(NNAC) - YROOT2(NNAC))
         DXDYTE2(NNAC) = ((XTIPTE2(NNAC) - XRTTE2(NNAC)))/
     & (YTIP2(NNAC) - YROOT2(NNAC))
 600  CONTINUE
      END IF
C     
C     HITCHHIKERS ARE EQUALLY SPACED BUT DIFFERENT GEOMETRY
C     
      IF (SPC) THEN
         NNAC = 0
         WRITE(IWRIT,1036)NAC
         READ(IREAD,*) XSTR, YSTR, ZSTR
C     
C     XSTRH,YSTRH,ZSTRH ARE COUNTERS
C     
         XSTRH = 0.0
         YSTRH = 0.0
         ZSTRH = 0.0
C     
         DO 603 NNAC = 1,NAC
         WRITE(IWRIT,1015)NNAC
         READ(IREAD,*) YROOT2(NNAC),XRTLE2(NNAC),XRTTE2(NNAC)
         WRITE(IWRIT,1025)NNAC
         READ(IREAD,*) YTIP2(NNAC),XTIPLE2(NNAC),XTIPTE2(NNAC)
         WRITE(IWRIT,1035)NNAC
         READ(IREAD,*) NSPAN2(NNAC),NCHRD2(NNAC)
         XSTAR(NNAC) = XSTRH + XSTR
         XSTRH = XSTAR(NNAC)
         YSTAR(NNAC) = YSTRH + YSTR
         YSTRH = YSTAR(NNAC)
         ZSTAR(NNAC) = ZSTRH + ZSTR
         ZSTRH = ZSTAR(NNAC)
         XNSPAN2(NNAC) = NSPAN2(NNAC)
         XNCHRD2(NNAC) = NCHRD2(NNAC)
         DXDYLE2(NNAC) = ((XTIPLE2(NNAC) - XRTLE2(NNAC)))/
     & (YTIP2(NNAC) - YROOT2(NNAC))
         DXDYTE2(NNAC) = ((XTIPTE2(NNAC) - XRTTE2(NNAC)))/
     & (YTIP2(NNAC) - YROOT2(NNAC))
 603  CONTINUE
      END IF
CCC   
C     PLANFORM PROPERTIES FOR MOTHERSHIP: AIRCRAFT 1
C     
      CROOT1 = XRTTE1- XRTLE1
      CTIP1 = XTIPTE1 - XTIPLE1
      B21 = YTIP1 - YROOT1
      SREF1 = (CROOT1+ CTIP1)*B21
      AR1 = (2.0*B21)**2/SREF1
      XLESWP1 = 180./PI*ATAN(DXDYLE1)
      XTESWP1 = 180./PI*ATAN(DXDYTE1)
      TAPER1 = CTIP1/CROOT1
      CAV1 = SRE F1/(2.*B21)
      XREF1 = XRTLE1
      CREF1 = SREF1/(2.*B21)
      WRITE(1,1045)
      WRITE(1,1050) SREF1,AR1,XLESWP1,XTESWP1,TAPER1
C     
C     PLANFORM PROPERTIES FOR HITCHHIKER: AIRCRAFT 2
C     
      NNAC = 0
      DO 604 NNAC = 1,NAC
      CROOT2(NNAC) = XRTTE2(NNAC) - XRTLE2(NNAC)
      CTIP2(NNAC) = XTIPTE2(NNAC) - XTIPLE2(NNAC)
      B22(NNAC) = YTIP2(NNAC) - YROOT2(NNAC)
      SREF2(NNAC) = (CROOT2(NNAC) + CTIP2(NNAC))*B22(NNAC)
      AR2(NNAC) = (2.*B22(NNAC))**2/SREF2(NNAC)
      XLESWP2(NNAC) = 180./PI*ATAN(DXDYLE2(NNAC))
      XTESWP2(NNAC) = 180./PI*ATAN(DXDYTE2(NNAC))
      TAPER2(NNAC) = CTIP2(NNAC)/CROOT2(NNAC)
      CAV2(NNAC) = SREF2(NNAC)/(2.*B22(NNAC))
      XREF2(NNAC) = XRTLE2(NNAC)
      CREF2(NNAC) = SREF2(NNAC)/(2.*B22(NNAC))
      WRITE(1,1046)NNAC
      WRITE(1,1055) SREF2(NNAC),AR2(NNAC),XLESWP2(NNAC),
     & XTESWP2(NNAC),TAPER2(NNAC)
 604  CONTINUE
C     
C     DEFINE GEOMETRY FOR MOTHERSHIP: AIRCRAFT 1
C     
      WRITE(1,1070)
      DELTAY1 = (YTIP1 - YROOT1)/XNSPAN1
      N = 0
      DO 50 NS = 1,NSPAN1
      XNS1 = NS
      YINBD1 = YROOT + (XNS1 - 1.0)*DELTAY1
      YOUTBD1 = YINBD1 + DELTAY1
      YCPTG1 = YINBD1 + DELTAY1/2.
      X1LEG1 = XRTLE1 + (YINBD1 - YROOT1)*DXDYLE1
      X2LEG1 = XRTLE1 + (YOUTBD1 - YROOT1)*DXDYLE1
      X1TEG1 = XRTTE1 + (YINBD1 - YRROT1)*DXDYTE1
      X2TEG1 = XRTTE1 + (YOUTBD1 - YROOT1)*DXDYTE1
      XCPTLE1 = XRTLE1 + (YCPTG1 - YROOT1)*DXDYLE1
      XCPTTE1 = XRTTE1 + (YCPTG1 - YROOT1)*DXDYTE1
      C11   = X1TEG1 - X1LEG1
      C21 = X2TEG1 - X2LEG1
      CCPT1 = XCPTTE1 - XCPTLE1
      CHRD1(NS) = CCPT1
      DELC11 = C11/XNCHRD1
      DELC21 = C21/XNCHRD1
      DELCPT1 = CCPT1/XNCHRD1
      DO 50 NC = 1,NCHRD1
      N = N + 1
      XNC1 = NC
      Z11(N) = 0.0
      Z21(N) = 0.0
      ZCPT1(N) = 0.0
      Y11(N) = YINBD1
      Y21(N) = YOUTBD1
      YCPT1(N) = YCPTG1
      X11(N) = X1LEG1 + (XNC1 - 1.0)*DELC11 + 0.25*DELC11
      X21(N) = X2LEG1 + (XNC1 - 1.0)*DELC21 + 0.25*DELC21
      XCPT1(N) = XCPTLE1 + (XNC1 - 1.0)*DELCPT1 + 0.75*DELCPT1
      XVCPT1(N) = XCPT1(N) - .5*DELCPT1
      WRITE(1,1040) N,Y11(N),Y21(N),X11(N),X21(N),XCPT1(N),YCPT1(N)
 50   CONTINUE
      NTOT1 = N

C     
C     DEFINE GEOMETRY FOR HITCHIKER: AIRCRAFT 2
C     

      NNAC = 0
      NTT2 = 0
      DO 605 NNAC = 1,NAC
      WRITE(1,1075)NNAC
      DELTAY2(NNAC) = (YTIP2(NNAC) - YROOT2(NNAC))/
     & (XNSPAN2( NNAC))
      N = 0
      NSPN2 = NSPAN2(NNAC)
      NCHD2 = NCHRD2(NNAC)
      DO 51 NS = 1,NSPN2
      XNS2(NNAC) = NS
      YINBD2(NNAC) = YROOT2(NNAC) + (XNS2(NNAC) - 1.0)
     & *DELTAY2(NNAC)
      YOUTBD2(NNAC) = YINBD2(NNAC) + DELTAY2(NNAC)
      YCPTG2(NNAC) = YINBD2(NNAC) + DELTAY2(NNAC)/2.
      X1LEG2(NNAC) = XRTLE2(NNAC) + (YINBD2(NNAC) -
     & YROOT2(NNAC))*DXDYLE2(NNAC)
      X2LEG2(NNAC) = XRTLE2(NNAC) + (YOUTBD2(NNAC) -
     & YROOT2(NNAC))*DXDYLE2(NNAC)
      X1TEG2(NNAC) = XRTTE2(NNAC) + (YINBD2(NNAC) -
     & YROOT2(NNAC))*DXDYTE2(NNAC)
      X2TEG2(NNAC) = XRTTE2(NNAC) + (YOUTBD2(NNAC) -
     & YROOT2(NNAC))*DXDYTE2(NNAC)
      XCPTLE2(NNAC) = XRTLE2(NNAC) + (YCPTG2(NNAC) -
     & YROOT2(NNAC))*DXDYLE2(NNAC)
      XCPTTE2(NNAC) = XRTTE2(NNAC) + (YCPTG2(NNAC) -
     & YROOT2(NNAC))*DXDYTE2(NNAC)
      C12(NNAC) = X1TEG2(NNAC) - X1LEG2(NNAC)
      C22(NNAC) = X2TEG2(NNAC) - X2LEG2(NNAC)
      CCPT2(NNAC) = XCPTTE2(NNAC) - XCPTLE2(NNAC)
      CHRD2(NS,NNAC) = CCPT2(NNAC)
      DELC12(NNAC) = C12(NNAC)/XNCHRD2(NNAC)
      DELC22(NNAC) = C22(NNAC)/XNCHRD2(NNAC)
      DELCPT2(NNAC) = CCPT2(NNAC)/XNCHRD2(NNAC)
C     
      DO 51 NC = 1,NCHD2
      N = N + 1
      XNC2(NNAC) = NC
      Z12(N,NNAC) = 0.0
      Z22(N,NNAC) = 0.0
      ZCPT2(N,NNAC) = 0.0
      Y12(N,NNAC) = YINBD2(NNAC)
      Y22(N,NNAC) = YOUTBD2(NNAC)
      YCPT2(N,NNAC) = YCPTG2(NNAC)
      X12(N,NNAC) = X1LEG2(NNAC) + (XNC2(NNAC) - 1.0)
     & *DELC12(NNAC) + 0.25*DELC12(NNAC)
      X22(N,NNAC) = X2LEG2(NNAC) + (XNC2(NNAC) - 1.0)
     & *DELC22(NNAC) + 0.25*DELC22(NNAC)
      XCPT2(N,NNAC) = XCPTLE2(NNAC) + (XNC2(NNAC) - 1.0)
     & *DELCPT2(NNAC) + 0.75*DELCPT2(NNAC)
      XVCPT2(N,NNAC) = XCPT2(N,NNAC) - .5*DELCPT2(NNAC)
      WRITE(1,1040) N,Y12(N,NNAC),Y22(N,NNAC),
     & X12(N,NNAC),X22(N,NNAC),
     & XCPT2(N,NNAC),YCPT2(N,NNAC)
 51   CONTINUE
      NTOT2(NNAC) = N
      NTT2 = NTOT2(NNAC)+NTT2
 605  CONTINUE
C     
C     ADD VORTEX GEOMETRY FROM MOTHERSHIP (AIRCRAFT 1) AND HITCHHIKER(S)
C     ADD MOTHERSHIP
C     
C     TIMES 2 B/C OF SYMMETRY FOR THE INDIVIDUAL HITCHHIKER
C     RECALL ORIGIN OF HITCHHIKER IS AT LE CENTERLINE
C     
      NTOT = (2*NTT2) + NTOT1
      WRITE(IWRIT,*)'NTOT',NTOT
C     
C     ADD MOTHERSHIP
C     
      I = 0
      DO 550 I = 1,NTOT1
      X1(I) = X11(I)
      X2(I) = X21(I)
      Y1(I) = Y11(I)
      Y2(I) = Y21(I)
      Z1(I) = Z11(I)
      Z2(I) = Z21(I)
      XCPT(I) = XCPT1(I)
      XVCPT(I) = XVCPT1(I)
      YCPT(I) = YCPT1(I)
      ZCPT(I) = ZCPT1(I)
 550  CONTINUE
CCC   NNAC = 0    

      NTT2 = 0
      COUNT = NTOT1
      DO 552 NNAC = 1,NAC
      I = 0
      J = 0
      K = 0
      NTT2 = NTOT2(NNAC)

C     
C     THESE LOOPS REORGANIZE X ARRAY OF HITCHHIKER TO READ LEFT TO RIGHT
C     

      NCHRD2(NNAC) = NCHD2
      NSPAN2(NNAC) = NSPN2
      B = 0
      DO 800 J = 1,NCHD2
      DO 801 K = 1,NSPN2
      ARRAY(K+B) = J
      L(K+B) = K
 801  CONTINUE
      B = NSPN2*J
 800  CONTINUE
      DO 551 I = 1,NTT2
      X1(I+(COUNT)) = X22(NTT2-(NSPN2*ARRAY(I))+L(I),NNAC)
     & + XSTAR(NNAC)
      X1(I+(COUNT+NTT2)) = X12(I,NNAC) + XSTAR(NNAC)
      X2(I+COUNT) = X22(NTT2 - (NSPN2*ARRAY(I))+L(I),NNAC)
     & + XSTAR(NNAC)
      X2(I+(COUNT+NTT2)) = X12(I,NNAC) + XSTAR(NNAC)
      write(*,*) X2(I+(COUNT+NTT2))
      Y1(I+(COUNT+NTT2)) = Y12(I,NNAC) + YSTAR(NNAC)
      Y1(I+COUNT) = Y12(I,NNAC) +
     & (YSTAR(NNAC)-B22(NNAC))
      Y2(I+(COUNT+NTT2)) = Y22(I,NNAC) + YSTAR(NNAC)
      Y2(I+(COUNT)) = Y22(I,NNAC) +
     & (YSTAR(NNAC)-B22(NNAC))
      Z1(I+COUNT) = Z12(I,NNAC) + ZSTAR(NNAC)
      Z1(I+(COUNT+NTT2)) = Z12(I,NNAC) + ZSTAR(NNAC)
      Z2(I+COUNT) = Z22(I,NNAC) + ZSTAR(NNAC)
      Z2(I+(COUNT+NTT2)) = Z22(I,NNAC) + ZSTAR(NNAC)
      XCPT(I+COUNT) = XCPT2(NTT2 -(NSPN2*ARRAY(I))+L(I),NNAC)
     & + XSTAR(NNAC)
      XCPT(I+(COUNT+NTT2)) = XCPT2(I,NNAC) + XSTAR(NNAC)
      XVCPT(I+COUNT) = XVCPT2(NTT2-(NSPN2*ARRAY(I))+L(I),NNAC)
     & + XSTAR(NNAC)
      XVCPT(I+(COUNT+NTT2)) = XVCPT2(I,NNAC) + XSTAR(NNAC)
      YCPT(I+(COUNT+NTT2)) = YCPT2(I,NNAC) + YSTAR(NNAC)
      YCPT(I+(COUNT)) = YCPT2(I,NNAC) +
     & (YSTAR(NNAC)-B22(NNAC))
      ZCPT(I+COUNT) = ZCPT2(I,NNAC) + ZSTAR(NNAC)
      ZCPT(I+(COUNT+NTT2)) = ZCPT2(I,NNAC) + ZSTAR(NNAC)
C     C
 551  CONTINUE
      COUNT = COUNT + (2* NTOT2(NNAC))
 552  CONTINUE
C     
      WRITE(1,1076)
      DO 609 N = 1, NTOT
      WRITE(1,1040) N,Y1(N),Y2(N),X1(N),X2(N),XCPT(N),YCPT(N)
 609  CONTINUE

C     
C     CHECK FOR NO OVERLAP BETWEEN TRAILING VPRTICES AND CP
C     

      NNAC = 0
      NTT2 = 0
      COUNT = NTOT1
      DO 606 NNAC = 1,NAC
      NTT2 = NTOT2(NNAC)
      DO 608 J = 1, NTT2
      DO 607 I = 1, NTOT1
      IF((Y1(I).EQ.YCPT(COUNT+J))
     & .OR.(Y2(1).EQ.YCPT(COUNT+J)))THEN
      WRITE(IWRIT,1056)
      STOP
      END IF
 607  CONTINUE
      IF((Y1(COUNT+J).EQ.YCPT(COUNT+(2*NTT2)+J)).OR.
     & (Y2(COUNT+J).EQ.YCPT(COUNT+(2*NTT2)+J))) THEN
      WRITE(IWRIT,1056)
      STOP
      END IF
 608  CONTINUE
      COUNT = COUNT + (2* NTT2)
 606  CONTINUE
C     
C     DEFINE THE DOWNWASH AT EACH CONTROL POINT - M
C     DUE TO THE VORTICES AT EACH N
C     
      DO 100 M = 1,NTOT
      DO 100 N = 1,NTOT
C     
      CALL VHORSE(XCPT(M),YCPT(M),ZCPT(M),X1(N),Y1(N),Z1(N),
     & X2(N),Y2(N),Z2(N),UR,VR,WR)
C     
      Y1N = -Y1(N)
      Y2N = -Y2(N)

      CALL VHORSE(XCPT(M),YCPT(M),ZCPT(M),X1(N),Y1N,Z1(N),
     & X2(N),Y2N,Z2(N),UL,VL,WL)
C     
 100  C(M,N) = - WL + WR
C     
      DO 120 N = 1,NTOT
      C(N,NTOT+1) = -1.0
 120  CONTINUE
C     
      NEQNS = NTOT
      NRHS = 1
      CALL GAUSS(NRHS)
C     C
      DO 101 M = 1,NTOT
      DO 101 N = 1,NTOT
C     
      CALL VHORSE(XVCPT(M),YCPT(M),ZCPT(M),X1(N),Y1(N),Z1(N),
     & X2(N),Y2(N),Z2(N),UVR,VVR,WVR)
C     
      Y1N = -Y1(N)
      Y2N = -Y2(N)
      CALL VHORSE(XVCPT(M),YCPT(M),ZCPT(M),X1(N),Y1N,Z1(N),
     & X2(N),Y2N,Z2(N),UVL,VVL,WVL)
C     
      CV(M,N) = ( -WVL + WVR)
 101  CONTINUE
C     
      DO 121 M = 1,NTOT
      WV(M) = 0.0
      DO 122 N = 1,NTOT
      WV(M) =WV(M)+(CV(M,N)*C(N,NEQNS+1))
 122  CONTINUE
 121  CONTINUE
C     
      SUMCL1 = 0.0
      SUMCM1 = 0.0
      SUMCL2(1) = 0.0
      SUMCM2(1) = 0.0
      SUMCL = 0.0
      SUMCM = 0.0
      SUMCDI1 = 0.0
      SUMCDI2(1) = 0.0
C     C
C      GAMMA AND DOWNWASH FOR MOTHERSHIP
C     
      WRITE(2,1081)
      WRITE(2,1080)
      WRITE(3,1083)
      WRITE(3,1085)
      DO 140 N = 1,NTOT1
      GAMMA1(N) = C(N,NEQNS+1)
      DOWN1(N) = WV(N)
      SUMCM1 = SUMCM1 + (XREF1 - XVCPT1(N))*GAMMA1(N)
      SUMCL1 = SUMCL1 + GAMMA1(N)
      SUMCDI1 = SUMCDI1 + (DOWN1(N)*GAMMA1(N))
      WRITE(2,450) N,GAMMA1(N)
      WRITE(3,450) N,DOWN1(N)
 140  CONTINUE
C     
C     GAMMA AND DOWNWASH FOR HITCHHIKER(S)
C     
      NNAC = 0
      COUNT = NTOT1
      DO 553 NNAC = 1, NAC
      WRITE(2,1082)NNAC
      WRITE(2,1080)
      WRITE(3,1084)NNAC
      WRITE(3,1085)
      NTT2 = NTOT2(NNAC)
      N = 0
      DO 141 N = 1, NTT2
      GAMMA2(N,NNAC) = C(COUNT+N,NEQNS+1)
      GAMMA2(N+NTT2,NNAC) = C(COUNT+N+NTT2,NEQNS+1)
      DOWN2(N,NNAC) = WV(COUNT+N)
      DOWN2(N+NTT2,NNAC) = WV(COUNT+N+NTT2)
      SUMCM2(NNAC) = SUMCM2(NNAC) +
     & (XREF2(NNAC) - XVCPT2(N,NNAC))*
     & (GAMMA2(NTT2+N,NNAC)+GAMMA2(N,NNAC))
      SUMCL2(NNAC) = SUMCL2(NNAC)
     & + (GAMMA2(N+NTT2,NNAC))+GAMMA2(N,NNAC)
      SUMCDI2(NNAC) = SUMCDI2 (NNAC)+
     & (GAMMA2(N+NTT2,NNAC)*DOWN2(N+NTT2,NNAC))
     & +(GAMMA2(N,NNAC)*DOWN2(N,NNAC))
      WRITE(2,450) N,GAMMA2(N,NNAC)
      WRITE(2,450) N+NTT2,GAMMA2(N+NTT2,NNAC)
      WRITE(3,450) N,DOWN2(N,NNAC)
      WRITE(3,450) N+NTT2,DOWN2(N+NTT2,NNAC)
 141  CONTINUE
      COUNT = COUNT + (2 * NTOT2(NNAC))
 553  CONTINUE
 450  FORMAT(I6,E20.7)
C     C
C     MOTHERSHIP SECTIONAL LIFT COEFFICIENT
C     
      WRITE(4,1121)
      WRITE(4,1120)
      DO 160 NS = 1,NSPAN1
      SUM1 = 0.0
      SUMD1 = 0.0
C     
      DO 150 NC = 1,NCHRD1
      N = (NS - 1)*NCHRD1 + NC
      SUMD1 = SUMD1 + (DOWN1(N)*GAMMA1(N))
 150  SUM1 = SUM1 + GAMMA1(N)
      CLLOC1 = 2./CHRD1(NS)*SUM1
      CCLCA1 = CHRD1(NS)/CAV1*CLLOC1
      ETA1 = YCPT1(N)/B21
      CDILOC1 = -CLLOC1*SUMD1
 160  WRITE(4,1140) NS,YCPT1(N),ETA1,CLLOC1,
     & CCLCA1,CDILOC1
C     
C     TOTAL COEFFICIENTS FOR HITCHHIKER
C     
      NNAC = 0
      DO 555 NNAC = 1,NAC
C     
      CL2(NNAC) = 2.0*DELTAY2(NNAC)/SREF2(NNAC)*SUMCL2(NNAC)
      CM2(NNAC) = 2.0*DELTAY2(NNAC)/SREF2(NNAC)/
     & CREF2(NNAC)*SUMCM2(NNAC)
      CDI2(NNAC) = -2.0*DELTAY2(NNAC)/SREF2(NNAC)*SUMCDI2(NNAC)
 555  CONTINUE
C     C
C     HITCHHIKER SECTIONAL LIFT COEFFICIENT
C     
C     
      NNAC = 0
      NSPN2 = 0
      NCHD2 = 0
      DO 554 NNAC = 1,NAC
      WRITE(4,1122)
      WRITE(4,1120)
      NSPN2 = NSPAN2(NNAC)
      NCHD2 = NCHRD2(NNAC)
      J = 0
      DO 161 NS = 1,NSPN2*2
      SUM2(NNAC) = 0.0
      SUMD2(NNAC) = 0.0
      DO 151 NC = 1,NCHD2
      N = (NS - 1)*NCHD2 + NC
      SUMD2(NNAC) = SUMD2(NNAC) + (DOWN2(N,NNAC)
     & *GAMMA2(N,NNAC))
 151  SUM2(NNAC) = SUM2(NNAC) + (GAMMA2(N,NNAC))
C     
      IF (NS.LE.NSPN2) THEN
         YCPT2(NS,NNAC) = YCPT2(N,NNAC)
         ETA2(NS,NNAC) = (YCPT2(N,NNAC)/B22(NNAC))-1.0
      ELSE
         YCPT2(NS,NNAC) = YCPT2(NS-NSPN2,NNAC)+B22(NNAC)
         ETA2(NS,NNAC) = (YCPT2(NS-NSPN2,NNAC))/ B22(NNAC)
      END IF
      IF (NS.LE.NSPN2) THEN
         CHRD2(NS,NNAC) = CHRD2(NSPN2-J,NNAC)
      ELSE
         CHRD2(NS,NNAC) = CHRD2(NS-NSPN2,NNAC)
      END IF
      CLLOC2(NS,NNAC) = 2./CHRD2(NS,NNAC)*SUM2(NNAC)
      CCLCA2(NS,NNAC) = CHRD2(NS,NNAC)/CAV2(NNAC)*CLLOC2(NS,NNAC)
      CDILOC2(NS,NNAC) = -CLLOC2(NS,NNAC)*SUMD2(NNAC)
      WRITE(4,1141) NS,YCPT2(NS,NNAC),
     & ETA2(NS,NNAC),
     & CLLOC2(NS,NNAC),CCLCA2(NS,NNAC),
     & CDILOC2(NS,NNAC)
C     
 161  CONTINUE
 554  CONTINUE
C     C
C     TOTAL COEFFICIENTS FOR MOTHERSHIP
C     
      CL1 = 4.0*DELTAY1/SREF1*SUMCL1
      CM1 = 4. 0*DELTAY1/SREF1/CREF1*SUMCM1
      CDI1 = -4.0*DELTAY1/SREF1*SUMCDI1
      WRITE(4,1061)
      WRITE(4,1060) CL1,CM1,CDI1
C     
C     TOTAL COEFFICIENTS FOR HITCHHIKER
C     
      NNAC = 0
      DO 556 NNAC = 1,NAC
      WRITE(4,1062) NNAC
      WRITE(4,1060) CL2(NNAC),CM2(NNAC),CDI2(NNAC)
 556  CONTINUE
C     
 99   FORMAT (A1)
 1000 FORMAT(//5X,'VORTEX LATTICE PROGRAM:'//5X,
     & 'COMPOUND AIRCRAFT TRANSPORT'/)
 1010 FORMAT(/'INPUT YROOT,XRTLE,XRTTE FOR MOTHERSHIP: AIRCRAFT 1'/)
 1020 FORMAT(/'INPUT YTIP,XTIPLE,XTIPTE FOR MOTHERSHIP: AIRCRAFT 1'/)
 1030 FORMAT(/'INPUT NSPAN AND NCHRD FOR MOTHERSHIP: AIRCRAFT 1'/)
 1015 FORMAT(/'INPUT YROOT,XRTLE,XRTTE FOR HITCHHIKER:', I3/)
 1016 FORMAT(/'HITCHHIKER(S) ORIGIN IS ON THE LE OF THE CENTERLINE'/)
 1017 FORMAT(/'NUMBER OF HITCHIKER AIRCRAFT WRT SYMMETRY, NAC'/)
 1018 FORMAT(/'DO ALL HITCHHIKER(S) HAVE SAME GEOMETRY?'/)
 1019 FORMAT(/'ARE ALL HITCHIKER(S) SPACED EVENLY?'/)
 1021 FORMAT(/'TO ANSWER YES, TYPE: Y and TO ANSWER NO, TYPE: N'/)
 1025 FORMAT(/'INPUT YTIP,XTIPLE,XTIPTE FOR HITCHHIKER:', I3/)
 1035 FORMAT(/'INPUT NSPAN AND NCHRD FOR HITCHHIKER:',I3/)
 1036 FORMAT(/'INPUT LOCATION OF EACH HITCHHIKER ORIGIN WRT'//,
     & 'MOTHERSHIP ORIGIN, X, Y, Z, FOR HITCHIKER:'//,
     & 'CAREFUL, MOTHERSHIP OR HITCHHIKER(S)'//,
     & 'TRAILING VORTICES CANNOT INTERSECT HITCHHIKER(S) CP'//,
     & I3/)
 1040 FORMAT(I5,6F12.6)
 1045 FORMAT(/'PLANFORM PROPERTIES FOR MOTHERSHIP: AIRCRAFT 1'/)
 1050 FORMAT(//5X,'SREF = ',F12.4,5X,'AR = ',F7.3/
     & /5X,'LE SWEEP = ',F12.5,5X,'TE SWEEP = ',F10.5/
     & /5X,'TAPER RATIO = ',F7.4/)
 1046 FORMAT(/'PLANFORM PROPERTIES FOR HITCHHIKER(S):',I3/)
 1055 FORMAT(//5X,'SREF = ',F12.4,5X,'AR = ',F7.3/
     & /5X,'LE SWEEP = ',F12.5,5X,'TE SWEEP = ',F10.5/
     & /5X,'TAPER RATIO = ',F7.4/)
 1056 FORMAT(//5X,'MOTHERSHIP or HITCHHIKER TRAILING VORTICES
     & INTERSECT HITCHHIKER(S) CP'//,
     & 'PROGRAM WILL BE TERMINATED'/)
 1060 FORMAT(/10X,'CL ALPHA PER RAD. = ',F7.4/
     & 10X,'CM ALPHA PER RAD. = ',F7.4/
     & 10X,'CDI ALPHA PER RAD. =',F7.4/)
 1061 FORMAT(//3X'COEFFICIENTS FOR MOTHERSHIP: AIRCRAFT 1'//3X)
 1062 FORMAT(//3X'COEFFICIENTS FOR HITCHHIKER(S): ',I3//3X)
 1070 FORMAT(//3X,'PANEL DATA FOR MOTHERSHIP: AIRCRAFT 1'//3X,' N
     & Y1 Y2 ',4X,
     & ' X1 X2 XCPT YCPT')
 1075 FORMAT(//3X,'PANEL DATA FOR HITCHHIKER(S):',I3//3X,' N
     & Y1 Y2 ',4X,
     & ' X1 X2 XCPT YCPT')
 1076 FORMAT(//3X,'PANEL DATA FOR ENTIRE SYSTEM'//3X,' N
     & Y1 Y2 ',4X,
     & ' X1 X2 XCPT YCPT')
 1081 FORMAT(//3X'GAMMA FOR MOTHERSHIP: AIRCRAFT 1'//3X)
 1082 FORMAT(//3X'GAMMA FOR HITCHHIKER(S): ',I3//3X)
 1080 FORMAT(//3X'RESULTS: GAMMA'//5X,'N',9X,'GAMMA')
 1083 FORMAT(//3X'DOWNWASH FOR MOTHERSHIP: AIRCRAFT 1'//3X)
 1084 FORMAT(//3X'DOWNWASH FOR HITCHHIKER(S): ',I3//3X)
 1085 FORMAT(//3X'RESULTS: DOWNWASH'//5X,'N',9X,'DOWNWASH')
 1120 FORMAT(/4X,'NS',7X,'Y',7X,'ETA',8X,'CL -LOC',7X,'CCLCA',
     & 7X,'CDI-LOC')
 1121 FORMAT(//3X 'SECTIONAL CHARACTERISTICS FOR MOTHERSHIP:
     & AIRCRAFT 1'//3X)
 1122 FORMAT(//3X 'SECTIONAL CHARACTERISTICS FOR HITCHHIKER(S):
     & ',I3//3X)
 1140 FORMAT(4X,I2,3X,F7.3,3X,F7.4,2X,F11.5,2X,F11.5,2X,F11.5)
 1141 FORMAT(4X,I2,3X,F7.3,3X,F7.4,2X,F11.5,2X,F11.5,2X,
     & F11.5,2X,F11.5)
      CLOSE(UNIT = 1)
      CLOSE(UNIT = 2)
      CLOSE(UNIT = 3)
      CLOSE(UNIT = 4)
      END

C====================================================================
      SUBROUTINE GAUSS(NRHS)
C     
C     MORAN - PAGE 78
C     
C     SOLUTION OF LINEAR ALGEBRAIC SYSTEM BY
C     GAUSS ELIMINATION WITH PARTIAL PIVOTING
C     
C     [A] = COEFFICIENT MATRIX
C     NEQNS = NUMBER OF EQUATIONS
C     NRHS = NUMBER OF RIGHT-HAND SIDES
C     
C     RIGHT -HAND SIDES AND SOLUTIONS STORED IN
C     COLUMNS NEQNS+1 THRU NEQNS+NRHS OF [A]
C     
      COMMON /COF/ A(5001,5002),NEQNS
      NP = NEQNS + 1
      NTOT = NEQNS + NRHS
C     
C     GAUSS REDUCTION
C     
      DO 150 I = 2,NEQNS
C     
C     -- SEARCH FOR LARGEST ENTRY IN (I-1)TH COLUMN
C     ON OR BELOW MAIN DIAGONAL
C     
      IM = I - 1
      IMAX = IM
      AMAX = ABS(A(IM,IM))
      DO 110 J = I,NEQNS
      IF (AMAX .GE. ABS(A(J,IM))) GO TO 110
      IMAX = J
      AMAX = ABS(A(J,IM))
 110  CONTINUE
C     
C     -- SWITCH (I-1)TH AND IMAXTH EQUATIONS
C     
      IF (IMAX .NE. IM) GO TO 140
      DO 130 J = IM,NTOT
      TEMP = A(IM,J)
      A(IM,J) = A(IMAX,J)
      A(IMAX,J) = TEMP
 130  CONTINUE
C     
C     ELIMINATE (I -1)TH UNKNOWN FROM
C     ITH THRU (NEQNS)TH EQUATIONS
C     
 140  DO 150 J = I,NEQNS
         R = A(J,IM)/A(IM,IM)
         DO 150 K = I,NTOT
 150     A(J,K) = A(J,K) - R*A(IM,K)
C     
C     BACK SUBSTITUTION
C     
         DO 220 K = NP,NTOT
         A(NEQNS,K) = A(NEQNS,K)/A(NEQNS,NEQNS)
         DO 210 L = 2,NEQNS
         I = NEQNS + 1 - L
         IP = I + 1
         DO 200 J = IP,NEQNS
 200     A(I,K) = A(I,K) - A(I,J)*A(J,K)
 210     A(I,K) = A(I,K)/A(I,I)
 220     CONTINUE
         RETURN
         END
C====================================================================
      SUBROUTINE VHORSE(XPT,YPT,ZPT,X1N,Y1N,Z1N,X2N,Y2N,Z2N,
     & UHORSE,AHORSE,WHORSE)
C     
C     COMPUTE DOWNWASH AT A POINT XPT, YPT, ZPT DUE TO A
C     UNIT STRENGTH HORSESHOE VORTEX AT X1N,Y1N,Z1N - X2N,Y2N,Z2N
C     
      COMMON /CONST/PI,COEFH
C     
C     THE BOUND VORTEX
C     
      D1 = SQRT((XPT -X1N)**2+(YPT-Y1N)**2+(ZPT-Z1N)**2)
      D2 = SQRT((XPT -X2N)**2+(YPT-Y2N)**2+(ZPT-Z2N)**2)
      T21= ((X2N-X1N)*(XPT-X1N)+(Y2N-Y1N)*(YPT-Y1N)+
     & (Z2N-Z1N)*(ZPT-Z1N))/D1
      T22= ((X2N-X1N)*(XPT-X2N)+(Y2N-Y1N)*(YPT-Y2N)+
     & (Z2N-Z1N)*(ZPT-Z2N))/D2
      T2 = T21 - T22
C     
      T1I = (YPT-Y1N)*(ZPT-Z2N)-(ZPT-Z1N)*(YPT-Y2N)
      T1J = (XPT-X1N)*(ZPT-Z2N)-(ZPT-Z1N)*(XPT-X2N)
      T1K = (XPT-X1N)*(YPT-Y2N)-(YPT-Y1N)*(XPT-X2N)
      T1D = T1I**2 + T1J**2 + T1K**2
      T1X = 0.0
      T1Y = 0.0
      T1Z = 0.0
      IF (T1D .LE. 0.1E-5) WRITE (10,100) T1D,T1I,T1J,T1K,XPT,X1N,X2N,
     & YPT,Y1N,Y2N
      IF (T1D .LE. 0.1E-5) GO TO 10
 100  FORMAT(//5X,4E16.6/5X,3E16.6/5X,3E16.6//)
C     
      T1X = T1I/T1D
      T1Y =-T1J/T1D
      T1Z = T1K/T1D
C     
 10   CONTINUE
C     
      UBND = T2*T1X
      VBND = T2*T1Y
      WBND = T2*T1Z
C     
C     THE A TO INFINITY VORTEX
C     
      CA1 = (ZPT - Z1N)**2 + (YPT - Y1N)**2
      CA2 = SQRT(CA1 + (XPT - X1N)**2)
      COEFA = (1.0 + (XPT - X1N)/CA2)/CA1
      UAI = 0.0
      VAI = (ZPT - Z1N)*COEFA
      WAI = (Y1N - YPT)*COEFA
C     
C     THE B TO INFINITY VORTEX
C     
      CB1 = (ZPT - Z2N)**2 + (YPT - Y2N)**2
      CB2 = SQRT(CB1 + (XPT - X2N)**2)
      COEFB = (1.0 + (XPT - X2N)/CB2)/CB1
C     
      UBI = 0.0
      VBI = -(ZPT - Z2N)*COEFB
      WBI = -(Y2N - YPT)*COEFB
C     
      UHORSE = COEFH*(UBND + UAI + UBI)
      AHORSE = COEFH*(VBND + VAI + VBI)
      WHORSE = COEFH*(WBND + WAI + WBI)
C     
      RETURN
      END
