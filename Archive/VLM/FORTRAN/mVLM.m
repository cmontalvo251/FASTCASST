clear
clc
close all
% ! C Program for VLM CAT
% ! C
% ! C PROGRAM VLMX
% ! C
% ! C W.H. MASON, FEBRUARY 1989
% ! C
% ! C CLASSIC VORTEX LATTICE METHOD
% ! C MODEL PROBLEM: TRAPEZOIDAL WING
% ! C FIRST MODIFIED BY SAM MAGILL 020602
% ! C FINAL MODIFICATION BY SAM MAGILL 032702
% ! C VLM FOR COMPOUND AIRCRAFT TRANSPORT
% ! C MULTIPLE AIRCRAFT: MOTHERSHIP + HITCHHIKER(S)
% ! C SYSTEM SYMMETRY ABOUT CENTERLINE OF MOTHERSHIP
% ! C ALL COORDINATES INPUTTED ABOUT INDIVIDUAL AIRCRAFT CENTERLINE
% ! C

PI = 3.1415926585;
COEFH = 1.0/(4.0*PI);
IREAD = 5;
IWRIT = 6;
disp('VORTEX LATTICE PROGRAM')

%       !OPEN(UNIT = 1, FILE = 'GEOM.DAT',STATUS = 'NEW',iostat=ierr)
%       !OPEN(UNIT = 2, FILE = 'GAMMA.DAT',STATUS = 'NEW',iostat=ierr)
%       !OPEN(UNIT = 3, FILE = 'DOWN.DAT',STATUS = 'NEW',iostat=ierr)
%       !OPEN(UNIT = 4, FILE = 'COEF.DAT',STATUS = 'NEW',iostat=ierr)

% C     C
% C     DEFINE PLANFORM FOR MOTHERSHIP: AIRCRAFT 1
% C     

% !!I'm guessing this is the definition of the motherships
% !!wing
YROOT1 = 0.0;
XRTLE1 = 0.0;
XRTTE1 = 1.5;
YTIP1 = 1.4121; 
XTIPLE1 = 1.91421; 
XTIPTE1 = 2.41421;
% !!I think that this is then the number of elements
NSPAN1 = 10;
NCHRD1 = 10;


disp(['Mothership yroot,xroot(LE,TE) = ',YROOT1,XRTLE1,XRTTE1])
disp(['Mothership ytip,xtip(LE,TE) = ',YTIP1,XTIPLE1,XTIPTE1])

% !!I would imagine this is saving the slope of the leading and
% !!trailing edges
XNSPAN1 = NSPAN1
XNCHRD1 = NCHRD1
DXDYLE1 = (XTIPLE1 - XRTLE1)/(YTIP1 - YROOT1)
DXDYTE1 = (XTIPTE1 - XRTTE1)/(YTIP1 - YROOT1)

disp(['LE and TE Slopes = ',DXDYLE1,DXDYTE1])

% c$    C     
% c$    DEFINE PLANFORM FOR HITCHHIKER: FOLLOW 'IF STATEMENT' IF ALL HITCHHIKERS HAVE
% c$    SAME GEOMETRY AND EQUAL SPACING: IF JUST HAVE SAME GEOMTRY: IF JUST HAVE
% c$    EQUAL SPACING: IF ARE NEITHER EQUALLY SPACED OR SAME GEOMETRY

%       !!This is the number of hitchhiker aircrafts
NAC = 1;
disp(['Number of Aircrafts = ',NAC])
% !!This is whether or not the hitchhikers all have the same GEOMETRY
ANS = 'Y';
% !!This is whether or not the H are evenly spaced
SPACE = 'Y';
% !!Apparently the H origin is...
disp('HITCHHIKER(S) ORIGIN IS ON THE LE OF THE CENTERLINE')
GEOMSPC = 0;
NGEOMSPC = 0;
GEOM = 0;
SPC = 0;
% !This is to check geometry and equal spacing
if ((ANS=='Y')&&(SPACE=='Y'))
  GEOMSPC = 1;
end
if ((ANS=='Y')&&(SPACE=='N'))
  GEOM = 1;
end
if ((ANS=='N')&&(SPACE=='Y'))
  SPC = 1;
end
if ((ANS=='N')&&(SPACE=='N'))
  NGEOMSPC = 1;
end

if (GEOMSPC) 
  % !!This means that all hitchikers have the same geometry
  % !!So you put it on once and that's it
  NNAC = 0;
  disp('ALL HITCHHIKERS')
  % !!Planform data
  SYROOT2 = 0;
  SXRTLE2 = 0.0;
  SXRTTE2 = 1.5;
  SYTIP2 = 1.4121;
  SXTIPLE2 = 1.91421;
  SXTIPTE2 = 2.41421;
  % !!Wing sections
  SNSPAN2 = 10;
  SNCHRD2 = 10;
  % !!INPUT LOCATION OF EACH HITCHHIKER ORIGIN WRT
  % !!MOTHERSHIP ORIGIN, X, Y, Z, FOR HITCHIKER:'//,
  % !!CAREFUL, MOTHERSHIP OR HITCHHIKER(S)'//,
  % !!TRAILING VORTICES CANNOT INTERSECT HITCHHIKER(S) CP'//,
  XSTR = 3.91421;
  YSTR = 2.8242;
  ZSTR = 0;
  % C     
  % C     XSTRH,YSTRH,ZSTRH ARE COUNTERS
  % C     
  XSTRH = 0.0
  YSTRH = 0.0
  ZSTRH = 0.0
  % C     
  %          !This is just a do loop that calculates position and 
  %          !geometry for all aircrafts
  for NNAC = 1:NAC
    YROOT2(NNAC) = SYROOT2
    XRTLE2(NNAC) = SXRTLE2
    XRTTE2(NNAC) = SXRTTE2
    YTIP2(NNAC) = SYTIP2
    XTIPLE2(NNAC) = SXTIPLE2
    XTIPTE2(NNAC) = SXTIPTE2
    NSPAN2(NNAC) = SNSPAN2
    NCHRD2(NNAC) = SNCHRD2
    XNSPAN2(NNAC) = NSPAN2(NNAC)
    XSTAR(NNAC) = XSTRH + XSTR
    XSTRH = XSTAR(NNAC)
    YSTAR(NNAC) = YSTRH + YSTR
    YSTRH = YSTAR(NNAC)
    ZSTAR(NNAC) = ZSTRH + ZSTR
    ZSTRH = ZSTAR(NNAC)
    XNCHRD2(NNAC) = NCHRD2(NNAC)
    DXDYLE2(NNAC) = ((XTIPLE2(NNAC) - XRTLE2(NNAC)))/(YTIP2(NNAC) - YROOT2(NNAC))
    DXDYTE2(NNAC) = ((XTIPTE2(NNAC) - XRTTE2(NNAC)))/(YTIP2(NNAC) - YROOT2(NNAC))
  end
end

%       !!This then computes other properties for the two
%       !!aircraft

% !      CCC   
% C     PLANFORM PROPERTIES FOR MOTHERSHIP: AIRCRAFT 1
% C     
CROOT1 = XRTTE1- XRTLE1
CTIP1 = XTIPTE1 - XTIPLE1
B21 = YTIP1 - YROOT1
SREF1 = (CROOT1+ CTIP1)*B21
AR1 = (2.0*B21)^2/SREF1
XLESWP1 = 180./PI*atan(DXDYLE1)
XTESWP1 = 180./PI*atan(DXDYTE1)
TAPER1 = CTIP1/CROOT1
CAV1 = SREF1/(2.*B21)
XREF1 = XRTLE1
CREF1 = SREF1/(2.*B21)
disp('FORMAT(/PLANFORM PROPERTIES FOR MOTHERSHIP: AIRCRAFT 1/)')
SREF1,AR1,XLESWP1,XTESWP1,TAPER1

% C     PLANFORM PROPERTIES FOR HITCHHIKER: AIRCRAFT 2
% C     
NNAC = 0
for NNAC = 1:NAC
  CROOT2(NNAC) = XRTTE2(NNAC) - XRTLE2(NNAC)
  CTIP2(NNAC) = XTIPTE2(NNAC) - XTIPLE2(NNAC)
  B22(NNAC) = YTIP2(NNAC) - YROOT2(NNAC)
  SREF2(NNAC) = (CROOT2(NNAC) + CTIP2(NNAC))*B22(NNAC)
  AR2(NNAC) = (2.*B22(NNAC))^2/SREF2(NNAC)
  XLESWP2(NNAC) = 180./PI*atan(DXDYLE2(NNAC))
  XTESWP2(NNAC) = 180./PI*atan(DXDYTE2(NNAC))
  TAPER2(NNAC) = CTIP2(NNAC)/CROOT2(NNAC)
  CAV2(NNAC) = SREF2(NNAC)/(2.*B22(NNAC))
  XREF2(NNAC) = XRTLE2(NNAC)
  CREF2(NNAC) = SREF2(NNAC)/(2.*B22(NNAC))
  %  WRITE(*,1046)NNAC
  %  WRITE(*,1055) SREF2(NNAC),AR2(NNAC),XLESWP2(NNAC),
  % &     XTESWP2(NNAC),TAPER2(NNAC)
end

% !This will split the mothership into spaces according to the number
% !of sections defined

disp('PANEL DATA FOR MOTHERSHIP')
DELTAY1 = (YTIP1 - YROOT1)/XNSPAN1;
N = 0;
for NS = 1:NSPAN1
  XNS1 = NS;
  YINBD1 = YROOT1 + (XNS1 - 1.0)*DELTAY1;
  YOUTBD1 = YINBD1 + DELTAY1;
  YCPTG1 = YINBD1 + DELTAY1/2;
  X1LEG1 = XRTLE1 + (YINBD1 - YROOT1)*DXDYLE1;
  X2LEG1 = XRTLE1 + (YOUTBD1 - YROOT1)*DXDYLE1;
  X1TEG1 = XRTTE1 + (YINBD1 - YROOT1)*DXDYTE1;
  X2TEG1 = XRTTE1 + (YOUTBD1 - YROOT1)*DXDYTE1;
  XCPTLE1 = XRTLE1 + (YCPTG1 - YROOT1)*DXDYLE1;
  XCPTTE1 = XRTTE1 + (YCPTG1 - YROOT1)*DXDYTE1;
  C11   = X1TEG1 - X1LEG1;
  C21 = X2TEG1 - X2LEG1;
  CCPT1 = XCPTTE1 - XCPTLE1;
  CHRD1(NS) = CCPT1;
  DELC11 = C11/XNCHRD1;
  DELC21 = C21/XNCHRD1;
  DELCPT1 = CCPT1/XNCHRD1;
  for NC = 1:NCHRD1
    N = N + 1;
    XNC1 = NC;
    Z11(N) = 0.0;
    Z21(N) = 0.0;
    ZCPT1(N) = 0.0;
    Y11(N) = YINBD1;
    Y21(N) = YOUTBD1;
    YCPT1(N) = YCPTG1;
    X11(N) = X1LEG1 + (XNC1 - 1.0)*DELC11 + 0.25*DELC11;
    X21(N) = X2LEG1 + (XNC1 - 1.0)*DELC21 + 0.25*DELC21;
    XCPT1(N) = XCPTLE1 + (XNC1 - 1.0)*DELCPT1 + 0.75*DELCPT1;
    XVCPT1(N) = XCPT1(N) - .5*DELCPT1;
    %disp([N,Y11(N),Y21(N),X11(N),X21(N),XCPT1(N),YCPT1(N)])
  end
  
end
NTOT1 = N

figure
%CubeDraw(0.3,1.02,0,0.15,0.51,0,0,0,0,[0 0 0])
hold on
plot(X11,Y11,'bo')
axis equal
%pause
plot(X21,Y21,'ro')
plot(XCPT1,YCPT1,'gx')

NNAC = 0
NTT2 = 0
for NNAC = 1:NAC
  %WRITE(1,1075)NNAC
  DELTAY2(NNAC) = (YTIP2(NNAC) - YROOT2(NNAC))/(XNSPAN2( NNAC));
  N = 0;
  NSPN2 = NSPAN2(NNAC);
  NCHD2 = NCHRD2(NNAC);
  for NS = 1:NSPN2
    XNS2(NNAC) = NS;
    YINBD2(NNAC) = YROOT2(NNAC) + (XNS2(NNAC) - 1.0)*DELTAY2(NNAC);
    YOUTBD2(NNAC) = YINBD2(NNAC) + DELTAY2(NNAC);
    YCPTG2(NNAC) = YINBD2(NNAC) + DELTAY2(NNAC)/2.;
    X1LEG2(NNAC) = XRTLE2(NNAC) + (YINBD2(NNAC) - YROOT2(NNAC))*DXDYLE2(NNAC);
    X2LEG2(NNAC) = XRTLE2(NNAC) + (YOUTBD2(NNAC) - YROOT2(NNAC))*DXDYLE2(NNAC);
    X1TEG2(NNAC) = XRTTE2(NNAC) + (YINBD2(NNAC) - YROOT2(NNAC))*DXDYTE2(NNAC);
    X2TEG2(NNAC) = XRTTE2(NNAC) + (YOUTBD2(NNAC) - YROOT2(NNAC))*DXDYTE2(NNAC);
    XCPTLE2(NNAC) = XRTLE2(NNAC) + (YCPTG2(NNAC) - YROOT2(NNAC))*DXDYLE2(NNAC);
    XCPTTE2(NNAC) = XRTTE2(NNAC) + (YCPTG2(NNAC) - YROOT2(NNAC))*DXDYTE2(NNAC);
    C12(NNAC) = X1TEG2(NNAC) - X1LEG2(NNAC);
    C22(NNAC) = X2TEG2(NNAC) - X2LEG2(NNAC);
    CCPT2(NNAC) = XCPTTE2(NNAC) - XCPTLE2(NNAC);
    CHRD2(NS,NNAC) = CCPT2(NNAC);
    DELC12(NNAC) = C12(NNAC)/XNCHRD2(NNAC);
    DELC22(NNAC) = C22(NNAC)/XNCHRD2(NNAC);
    DELCPT2(NNAC) = CCPT2(NNAC)/XNCHRD2(NNAC);
    for NC = 1:NCHD2
      N = N + 1;
      XNC2(NNAC) = NC;
      Z12(N,NNAC) = 0.0;
      Z22(N,NNAC) = 0.0;
      ZCPT2(N,NNAC) = 0.0;
      Y12(N,NNAC) = YINBD2(NNAC);
      Y22(N,NNAC) = YOUTBD2(NNAC);
      YCPT2(N,NNAC) = YCPTG2(NNAC);
      X12(N,NNAC) = X1LEG2(NNAC) + (XNC2(NNAC) - 1.0)*DELC12(NNAC) + 0.25*DELC12(NNAC);
      X22(N,NNAC) = X2LEG2(NNAC) + (XNC2(NNAC) - 1.0)*DELC22(NNAC) + 0.25*DELC22(NNAC);
      XCPT2(N,NNAC) = XCPTLE2(NNAC) + (XNC2(NNAC) - 1.0)*DELCPT2(NNAC) + 0.75*DELCPT2(NNAC);
      XVCPT2(N,NNAC) = XCPT2(N,NNAC) - .5*DELCPT2(NNAC);
    end
  end
  NTOT2(NNAC) = N;
  NTT2 = NTOT2(NNAC)+NTT2;
end

% C     
% C     ADD VORTEX GEOMETRY FROM MOTHERSHIP (AIRCRAFT 1) AND HITCHHIKER(S)
% C     ADD MOTHERSHIP
% C     
% C     TIMES 2 B/C OF SYMMETRY FOR THE INDIVIDUAL HITCHHIKER
% C     RECALL ORIGIN OF HITCHHIKER IS AT LE CENTERLINE
% C     

NTOT = (2*NTT2) + NTOT1;
%WRITE(IWRIT,*)'NTOT',NTOT
% C     
% C     ADD MOTHERSHIP
% C     
I = 0;
for I = 1:NTOT1
  X1(I) = X11(I);
  X2(I) = X21(I);
  Y1(I) = Y11(I);
  Y2(I) = Y21(I);
  Z1(I) = Z11(I);
  Z2(I) = Z21(I);
  XCPT(I) = XCPT1(I);
  XVCPT(I) = XVCPT1(I);
  YCPT(I) = YCPT1(I);
  ZCPT(I) = ZCPT1(I);
end

NTT2 = 0;
COUNT = NTOT1;
for NNAC = 1:NAC
  I = 0
  J = 0
  K = 0
  NTT2 = NTOT2(NNAC);

% C     
% C     THESE LOOPS REORGANIZE X ARRAY OF HITCHHIKER TO READ LEFT TO RIGHT
% C     

  NCHRD2(NNAC) = NCHD2;
  NSPAN2(NNAC) = NSPN2;
  B = 0
  for J = 1:NCHD2
    for K = 1:NSPN2
      ARRAY(K+B) = J;
      L(K+B) = K;
    end
    B = NSPN2*J;
  end
  for I = 1:NTT2
    X1(I+(COUNT)) = X22(NTT2-(NSPN2*ARRAY(I))+L(I),NNAC) + XSTAR(NNAC);
    X1(I+(COUNT+NTT2)) = X12(I,NNAC) + XSTAR(NNAC);
  
    X2(I+COUNT) = X22(NTT2 - (NSPN2*ARRAY(I))+L(I),NNAC) + XSTAR(NNAC);
    X2(I+(COUNT+NTT2)) = X12(I,NNAC) + XSTAR(NNAC);
    
    Y1(I+(COUNT+NTT2)) = Y12(I,NNAC) + YSTAR(NNAC);
    Y1(I+COUNT) = Y12(I,NNAC) + (YSTAR(NNAC)-B22(NNAC));
    
    Y2(I+(COUNT+NTT2)) = Y22(I,NNAC) + YSTAR(NNAC);
    Y2(I+(COUNT)) = Y22(I,NNAC) + (YSTAR(NNAC)-B22(NNAC));
        
    Z1(I+COUNT) = Z12(I,NNAC) + ZSTAR(NNAC);
    Z1(I+(COUNT+NTT2)) = Z12(I,NNAC) + ZSTAR(NNAC);
    
    Z2(I+COUNT) = Z22(I,NNAC) + ZSTAR(NNAC);
    Z2(I+(COUNT+NTT2)) = Z22(I,NNAC) + ZSTAR(NNAC);
    
    XCPT(I+COUNT) = XCPT2(NTT2 -(NSPN2*ARRAY(I))+L(I),NNAC) + XSTAR(NNAC);
    XCPT(I+(COUNT+NTT2)) = XCPT2(I,NNAC) + XSTAR(NNAC);
    XVCPT(I+COUNT) = XVCPT2(NTT2-(NSPN2*ARRAY(I))+L(I),NNAC) + XSTAR(NNAC);
    XVCPT(I+(COUNT+NTT2)) = XVCPT2(I,NNAC) + XSTAR(NNAC);
    YCPT(I+(COUNT+NTT2)) = YCPT2(I,NNAC) + YSTAR(NNAC);
    YCPT(I+(COUNT)) = YCPT2(I,NNAC) + (YSTAR(NNAC)-B22(NNAC));
    ZCPT(I+COUNT) = ZCPT2(I,NNAC) + ZSTAR(NNAC);
    ZCPT(I+(COUNT+NTT2)) = ZCPT2(I,NNAC) + ZSTAR(NNAC);
    % C     C
  end
  COUNT = COUNT + (2* NTOT2(NNAC));
end

% C     
%       WRITE(1,1076)
%       DO 609 N = 1, NTOT
%       WRITE(1,1040) N,Y1(N),Y2(N),X1(N),X2(N),XCPT(N),YCPT(N)
%  609  CONTINUE

% C     
% C     CHECK FOR NO OVERLAP BETWEEN TRAILING VORTICES AND CP
% C     

NNAC = 0
NTT2 = 0
COUNT = NTOT1
for NNAC = 1:NAC
  NTT2 = NTOT2(NNAC);
  for J = 1:NTT2
    for I = 1:NTOT1
      if((Y1(I)==YCPT(COUNT+J)) || (Y2(I)==YCPT(COUNT+J)))
	disp('TRAILING VORTICES INTERSECT')
	break
      end
    end
    if((Y1(COUNT+J)==YCPT(COUNT+(NTT2)+J))||(Y2(COUNT+J)==YCPT(COUNT+(NTT2)+J)))
      disp('TRAILING VORTICES INTERSECT')
      break
    end
  end
  COUNT = COUNT + (2* NTT2);
end
[r,col] = size(Y1);
C = zeros(col,col+1);

for M = 1:NTOT
  for N = 1:NTOT

    [UR,VR,WR] = VHORSE(XCPT(M),YCPT(M),ZCPT(M),X1(N),Y1(N),Z1(N),X2(N),Y2(N),Z2(N));

    Y1N = -Y1(N);
    Y2N = -Y2(N);

    [UL,VL,WL] = VHORSE(XCPT(M),YCPT(M),ZCPT(M),X1(N),Y1N,Z1(N),X2(N),Y2N,Z2(N));

    C(M,N) = - WL + WR;
  end
end
for N = 1:NTOT
  C(N,NTOT+1) = -1.0;
end
NEQNS = NTOT;
NRHS = 1;

disp('Gaussian Function')

C = GAUSS(NRHS,NEQNS,C);

for M = 1:NTOT
  for N = 1:NTOT

  [UVR,VVR,WVR] = VHORSE(XVCPT(M),YCPT(M),ZCPT(M),X1(N),Y1(N),Z1(N),X2(N),Y2(N),Z2(N));

  Y1N = -Y1(N);
  Y2N = -Y2(N);
  [UVL,VVL,WVL] = VHORSE(XVCPT(M),YCPT(M),ZCPT(M),X1(N),Y1N,Z1(N),X2(N),Y2N,Z2(N));

  CV(M,N) = ( -WVL + WVR);
  end
end
for M = 1:NTOT
  WV(M) = 0.0;
  for N = 1:NTOT
    WV(M) =WV(M)+(CV(M,N)*C(N,NEQNS+1));
  end
end

SUMCL1 = 0.0;
SUMCM1 = 0.0;
SUMCL2(1) = 0.0;
SUMCM2(1) = 0.0;
SUMCL = 0.0;
SUMCM = 0.0;
SUMCDI1 = 0.0;
SUMCDI2(1) = 0.0;
% C     C
%       GAMMA AND DOWNWASH FOR MOTHERSHIP
% C     
      % WRITE(2,1081)
      % WRITE(2,1080)
      % WRITE(3,1083)
      % WRITE(3,1085)
for N = 1:NTOT1
  GAMMA1(N) = C(N,NEQNS+1);
  DOWN1(N) = WV(N);
  SUMCM1 = SUMCM1 + (XREF1 - XVCPT1(N))*GAMMA1(N);
  SUMCL1 = SUMCL1 + GAMMA1(N);
  SUMCDI1 = SUMCDI1 + (DOWN1(N)*GAMMA1(N));
  %WRITE(2,450) N,GAMMA1(N)
  %WRITE(3,450) N,DOWN1(N)
end

% C     
% C     GAMMA AND DOWNWASH FOR HITCHHIKER(S)
% C     
NNAC = 0;
COUNT = NTOT1;
for NNAC = 1:NAC
  % WRITE(2,1082)NNAC
  % WRITE(2,1080)
  % WRITE(3,1084)NNAC
  % WRITE(3,1085)
  NTT2 = NTOT2(NNAC);
  N = 0;
  for N = 1:NTT2
    GAMMA2(N,NNAC) = C(COUNT+N,NEQNS+1);
    GAMMA2(N+NTT2,NNAC) = C(COUNT+N+NTT2,NEQNS+1);
    DOWN2(N,NNAC) = WV(COUNT+N);
    DOWN2(N+NTT2,NNAC) = WV(COUNT+N+NTT2);
    SUMCM2(NNAC) = SUMCM2(NNAC) + (XREF2(NNAC) - XVCPT2(N,NNAC))*(GAMMA2(NTT2+N,NNAC)+GAMMA2(N,NNAC));
    SUMCL2(NNAC) = SUMCL2(NNAC) + (GAMMA2(N+NTT2,NNAC))+GAMMA2(N,NNAC);
    SUMCDI2(NNAC) = SUMCDI2 (NNAC)+ (GAMMA2(N+NTT2,NNAC)*DOWN2(N+NTT2,NNAC)) +(GAMMA2(N,NNAC)*DOWN2(N,NNAC));
    % WRITE(2,450) N,GAMMA2(N,NNAC)
    % WRITE(2,450) N+NTT2,GAMMA2(N+NTT2,NNAC)
    % WRITE(3,450) N,DOWN2(N,NNAC)
    % WRITE(3,450) N+NTT2,DOWN2(N+NTT2,NNAC)
  end
  COUNT = COUNT + (2 * NTOT2(NNAC));
end

% C     C
% C     MOTHERSHIP SECTIONAL LIFT COEFFICIENT
% C     
%WRITE(4,1121)
%WRITE(4,1120)
for NS = 1:NSPAN1
  SUM1 = 0.0;
  SUMD1 = 0.0;
  for NC = 1:NCHRD1
    N = (NS - 1)*NCHRD1 + NC;
    SUMD1 = SUMD1 + (DOWN1(N)*GAMMA1(N));
    SUM1 = SUM1 + GAMMA1(N);
  end
  CLLOC1 = 2./CHRD1(NS)*SUM1;
  CCLCA1 = CHRD1(NS)/CAV1*CLLOC1;
  ETA1 = YCPT1(N)/B21;
  CDILOC1 = -CLLOC1*SUMD1;
  %WRITE(4,1140) NS,YCPT1(N),ETA1,CLLOC1,CCLCA1,CDILOC1
end
% C     
% C     TOTAL COEFFICIENTS FOR HITCHHIKER
% C     
NNAC = 0;
for NNAC = 1:NAC
  CL2(NNAC) = 2.0*DELTAY2(NNAC)/SREF2(NNAC)*SUMCL2(NNAC);
  CM2(NNAC) = 2.0*DELTAY2(NNAC)/SREF2(NNAC)/CREF2(NNAC)*SUMCM2(NNAC);
  CDI2(NNAC) = -2.0*DELTAY2(NNAC)/SREF2(NNAC)*SUMCDI2(NNAC);
end
% C     C
% C     HITCHHIKER SECTIONAL LIFT COEFFICIENT
% C     
% C     
NNAC = 0;
NSPN2 = 0;
NCHD2 = 0;
for NNAC = 1:NAC
  %WRITE(4,1122)
  %WRITE(4,1120)
  NSPN2 = NSPAN2(NNAC);
  NCHD2 = NCHRD2(NNAC);
  J = 0;
  for NS = 1:NSPN2*2
    SUM2(NNAC) = 0.0;
    SUMD2(NNAC) = 0.0;
    for NC = 1:NCHD2
      N = (NS - 1)*NCHD2 + NC;
      SUMD2(NNAC) = SUMD2(NNAC) + (DOWN2(N,NNAC)*GAMMA2(N,NNAC));
      SUM2(NNAC) = SUM2(NNAC) + (GAMMA2(N,NNAC));
    end
    if (NS <= NSPN2)
      YCPT2(NS,NNAC) = YCPT2(N,NNAC);
      ETA2(NS,NNAC) = (YCPT2(N,NNAC)/B22(NNAC))-1.0;
    else
      YCPT2(NS,NNAC) = YCPT2(NS-NSPN2,NNAC)+B22(NNAC);
      ETA2(NS,NNAC) = (YCPT2(NS-NSPN2,NNAC))/ B22(NNAC);
    end
    if (NS <= NSPN2)
      CHRD2(NS,NNAC) = CHRD2(NSPN2-J,NNAC);
    else
      CHRD2(NS,NNAC) = CHRD2(NS-NSPN2,NNAC);
    end
    CLLOC2(NS,NNAC) = 2./CHRD2(NS,NNAC)*SUM2(NNAC);
    CCLCA2(NS,NNAC) = CHRD2(NS,NNAC)/CAV2(NNAC)*CLLOC2(NS,NNAC);
    CDILOC2(NS,NNAC) = -CLLOC2(NS,NNAC)*SUMD2(NNAC);
    %WRITE(4,1141) NS,YCPT2(NS,NNAC),ETA2(NS,NNAC),CLLOC2(NS,NNAC),CCLCA2(NS,NNAC),CDILOC2(NS,NNAC)
  end
end
% C     C
% C     TOTAL COEFFICIENTS FOR MOTHERSHIP
% C     
CL1 = 4.0*DELTAY1/SREF1*SUMCL1;
CM1 = 4.0*DELTAY1/SREF1/CREF1*SUMCM1;
CDI1 = -4.0*DELTAY1/SREF1*SUMCDI1;
%WRITE(4,1061)
%WRITE(4,1060) CL1,CM1,CDI1
% C     
% C     TOTAL COEFFICIENTS FOR HITCHHIKER
% C     
NNAC = 0;
for NNAC = 1:NAC
  %WRITE(4,1062) NNAC
  %WRITE(4,1060) CL2(NNAC),CM2(NNAC),CDI2(NNAC)
end

%!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

% 99   FORMAT (A1)
% 1000 FORMAT(//5X,'VORTEX LATTICE PROGRAM:'//5X,
%     & 'COMPOUND AIRCRAFT TRANSPORT'/)
% 1010 FORMAT(/'INPUT YROOT,XRTLE,XRTTE FOR MOTHERSHIP: AIRCRAFT 1'/)
% 1020 FORMAT(/'INPUT YTIP,XTIPLE,XTIPTE FOR MOTHERSHIP: AIRCRAFT 1'/)
% 1030 FORMAT(/'INPUT NSPAN AND NCHRD FOR MOTHERSHIP: AIRCRAFT 1'/)
% 1015 FORMAT(/'INPUT YROOT,XRTLE,XRTTE FOR HITCHHIKER:', I3/)
% 1016 FORMAT(/'HITCHHIKER(S) ORIGIN IS ON THE LE OF THE CENTERLINE'/)
% 1017 FORMAT(/'NUMBER OF HITCHIKER AIRCRAFT WRT SYMMETRY, NAC'/)
% 1018 FORMAT(/'DO ALL HITCHHIKER(S) HAVE SAME GEOMETRY?'/)
% 1019 FORMAT(/'ARE ALL HITCHIKER(S) SPACED EVENLY?'/)
% 1021 FORMAT(/'TO ANSWER YES, TYPE: Y and TO ANSWER NO, TYPE: N'/)
% 1025 FORMAT(/'INPUT YTIP,XTIPLE,XTIPTE FOR HITCHHIKER:', I3/)
% 1035 FORMAT(/'INPUT NSPAN AND NCHRD FOR HITCHHIKER:',I3/)
% 1036 FORMAT(/'INPUT LOCATION OF EACH HITCHHIKER ORIGIN WRT'//,
%     & 'MOTHERSHIP ORIGIN, X, Y, Z, FOR HITCHIKER:'//,
%     & 'CAREFUL, MOTHERSHIP OR HITCHHIKER(S)'//,
%     & 'TRAILING VORTICES CANNOT INTERSECT HITCHHIKER(S) CP'//,
%     & I3/)
% 1040 FORMAT(I5,6F12.6)
% 1045 FORMAT(/'PLANFORM PROPERTIES FOR MOTHERSHIP: AIRCRAFT 1'/)
% 1050 FORMAT(//5X,'SREF = ',F12.4,5X,'AR = ',F7.3/
%     & /5X,'LE SWEEP = ',F12.5,5X,'TE SWEEP = ',F10.5/
%     & /5X,'TAPER RATIO = ',F7.4/)
% 1046 FORMAT(/'PLANFORM PROPERTIES FOR HITCHHIKER(S):',I3/)
% 1055 FORMAT(//5X,'SREF = ',F12.4,5X,'AR = ',F7.3/
%     & /5X,'LE SWEEP = ',F12.5,5X,'TE SWEEP = ',F10.5/
%     & /5X,'TAPER RATIO = ',F7.4/)
% 1056 FORMAT(//5X,'MOTHERSHIP or HITCHHIKER TRAILING VORTICES
%     & INTERSECT HITCHHIKER(S) CP'//,
%     & 'PROGRAM WILL BE TERMINATED'/)
% 1060 FORMAT(/10X,'CL ALPHA PER RAD. = ',F7.4/
%     & 10X,'CM ALPHA PER RAD. = ',F7.4/
%     & 10X,'CDI ALPHA PER RAD. =',F7.4/)
% 1061 FORMAT(//3X'COEFFICIENTS FOR MOTHERSHIP: AIRCRAFT 1'//3X)
% 1062 FORMAT(//3X'COEFFICIENTS FOR HITCHHIKER(S): ',I3//3X)
% 1070 FORMAT(//3X,'PANEL DATA FOR MOTHERSHIP: AIRCRAFT 1'//3X,' N
%     & Y1 Y2 ',4X,
%     & ' X1 X2 XCPT YCPT')
% 1075 FORMAT(//3X,'PANEL DATA FOR HITCHHIKER(S):',I3//3X,' N
%     & Y1 Y2 ',4X,
%     & ' X1 X2 XCPT YCPT')
% 1076 FORMAT(//3X,'PANEL DATA FOR ENTIRE SYSTEM'//3X,' N
%     & Y1 Y2 ',4X,
%     & ' X1 X2 XCPT YCPT')
% 1081 FORMAT(//3X'GAMMA FOR MOTHERSHIP: AIRCRAFT 1'//3X)
% 1082 FORMAT(//3X'GAMMA FOR HITCHHIKER(S): ',I3//3X)
% 1080 FORMAT(//3X'RESULTS: GAMMA'//5X,'N',9X,'GAMMA')
% 1083 FORMAT(//3X'DOWNWASH FOR MOTHERSHIP: AIRCRAFT 1'//3X)
% 1084 FORMAT(//3X'DOWNWASH FOR HITCHHIKER(S): ',I3//3X)
% 1085 FORMAT(//3X'RESULTS: DOWNWASH'//5X,'N',9X,'DOWNWASH')
% 1120 FORMAT(/4X,'NS',7X,'Y',7X,'ETA',8X,'CL -LOC',7X,'CCLCA',
%     & 7X,'CDI-LOC')
% 1121 FORMAT(//3X 'SECTIONAL CHARACTERISTICS FOR MOTHERSHIP:
%     & AIRCRAFT 1'//3X)
% 1122 FORMAT(//3X 'SECTIONAL CHARACTERISTICS FOR HITCHHIKER(S):
%     & ',I3//3X)
% 1140 FORMAT(4X,I2,3X,F7.3,3X,F7.4,2X,F11.5,2X,F11.5,2X,F11.5)
% 1141 FORMAT(4X,I2,3X,F7.3,3X,F7.4,2X,F11.5,2X,F11.5,2X,
%     & F11.5,2X,F11.5)

% CLOSE(UNIT = 1)
% CLOSE(UNIT = 2)
% CLOSE(UNIT = 3)
% CLOSE(UNIT = 4)
% END
