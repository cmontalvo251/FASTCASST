! C Program for VLM CAT
! C
! C PROGRAM VLMX
! C
! C W.H. MASON, FEBRUARY 1989
! C
! C CLASSIC VORTEX LATTICE METHOD
! C MODEL PROBLEM: TRAPEZOIDAL WING
! C FIRST MODIFIED BY SAM MAGILL 020602
! C FINAL MODIFICATION BY SAM MAGILL 032702
! C VLM FOR COMPOUND AIRCRAFT TRANSPORT
! C MULTIPLE AIRCRAFT: MOTHERSHIP + HITCHHIKER(S)
! C SYSTEM SYMMETRY ABOUT CENTERLINE OF MOTHERSHIP
! C ALL COORDINATES INPUTTED ABOUT INDIVIDUAL AIRCRAFT CENTERLINE
! C
      COMMON /COF/ C(5001,5002),NEQNS
      COMMON /CONST/ PI,COEFH
      DIMENSION Y1(800),Y2(800),Z1(800),Z2(800),X1(800),X2(800)
      DIMENSION XVCPT(800),YCPT(800),ZCPT(800),XCPT(800),GAMMA(800)
      DIMENSION Y11(800),Y21(800),Z11(800),Z21(800),X11(800),X21(800)
      DIMENSION XVCPT1(800),YCPT1(800),ZCPT1(800),XCPT1(800),GAMMA1(800)
      DIMENSION CHRD1(200),CHRD(200)
      DIMENSION Y12(800,800),Y22(800,800),Z12(800,800),Z22(800,800)
      DIMENSION X12(800,800),X22(800,800)
      DIMENSION XVCPT2(800,800),YCPT2(800,800),ZCPT2(800,800)
      DIMENSION XCPT2(800,800),GAMMA2(800,800)
      DIMENSION CHRD2(200,200)
      DIMENSION YROOT2(800),XRTLE2(800),XRTTE2(800),YTIP2(800)
      DIMENSION XTIPLE2(800),XTIPTE2(800),NSPAN2(800),NCHRD2(800)
      DIMENSION XNSPAN2(800),XNCHRD2(800),DXDYLE2(800),DXDYTE2(800)
      DIMENSION CROOT2(800),CTIP2(800),B22(800),SREF2(800),AR2(800)
      DIMENSION XLESWP2(800),XTESWP2(800),CAV2(800),TAPER2(800)
      DIMENSION XREF2(800),CREF2(800),DELTAY2(800),XNS2(800)
      DIMENSION YINBD2(800),CL2(800),CM2(800),ARRAY(800)
      DIMENSION YOUTBD2(800),X1LEG2(800),X2LEG2(800),X1TEG2(800)
      DIMENSION X2TEG2(800),YCPTG2(800),DELCPT2(800),NTOT2(800),L(800)
      DIMENSION XCPTLE2(800),XCPTTE2(800),C12(800),C22(800),CCPT2(800)
      DIMENSION DELC12(800),DELC22(800),XNC2(800),XSTAR(800),YSTAR(800)
      DIMENSION ZSTAR(800),SUMCL2(800),SUMCM2(800)
      DIMENSION ETA2(800,800), CLLOC2(800,800),CCLCA2(800,800),SUM2(800)
      DIMENSION DOWN1(800)
      DIMENSION DOWN2(800,800),CDI2(20)
      DIMENSION SUMCDI2(20),SUMD2(20),CDILOC2(400,40),WV(1000)
      DIMENSION CV(2000,2000)
      REAL XSTR, YSTR, ZSTR
      CHARACTER*1 ANS, SPACE
      LOGICAL GEOMSPC, NGEOMSPC, GEOM, SPC
      real iostat
!C     
      PI = 3.1415926585
      COEFH = 1.0/(4.0*PI)
      IREAD = 5
      IWRIT = 6
      WRITE(*,*)  'VORTEX LATTICE PROGRAM'

      OPEN(UNIT = 1, FILE = 'GEOM.DAT',STATUS = 'NEW',iostat=ierr)
      OPEN(UNIT = 2, FILE = 'GAMMA.DAT',STATUS = 'NEW',iostat=ierr)
      OPEN(UNIT = 3, FILE = 'DOWN.DAT',STATUS = 'NEW',iostat=ierr)
      OPEN(UNIT = 4, FILE = 'COEF.DAT',STATUS = 'NEW',iostat=ierr)

C     C
C     DEFINE PLANFORM FOR MOTHERSHIP: AIRCRAFT 1
C     
      !!I'm guessing this is the definition of the motherships
      !!wing
      YROOT1 = 0.0;
      XRTLE1 = 0.0;
      XRTTE1 = 1.5;
      YTIP1 = 1.4121; 
      XTIPLE1 = 1.91421; 
      XTIPTE1 = 2.41421;
      !!I think that this is then the number of elements
      NSPAN1 = 10;
      NCHRD1 = 10;


      write(*,*) 'Mothership yroot,xroot(LE,TE) = ',YROOT1,XRTLE1,XRTTE1
      write(*,*) 'Mothership ytip,xtip(LE,TE) = ',YTIP1,XTIPLE1,XTIPTE1

      !!I would imagine this is saving the slope of the leading and
      !!trailing edges
      XNSPAN1 = NSPAN1
      XNCHRD1 = NCHRD1
      DXDYLE1 = (XTIPLE1 - XRTLE1)/(YTIP1 - YROOT1)
      DXDYTE1 = (XTIPTE1 - XRTTE1)/(YTIP1 - YROOT1)

      write(*,*) 'LE and TE Slopes = ',DXDYLE1,DXDYTE1

c$    C     
c$    DEFINE PLANFORM FOR HITCHHIKER: FOLLOW 'IF STATEMENT' IF ALL HITCHHIKERS HAVE
c$    SAME GEOMETRY AND EQUAL SPACING: IF JUST HAVE SAME GEOMTRY: IF JUST HAVE
c$    EQUAL SPACING: IF ARE NEITHER EQUALLY SPACED OR SAME GEOMETRY

      !!This is the number of hitchhiker aircrafts
      NAC = 1;
      write(*,*) 'Number of Aircrafts = ',NAC
      !!This is whether or not the hitchhikers all have the same GEOMETRY
      ANS = 'Y'
      !!This is whether or not the H are evenly spaced
      SPACE = 'Y'
      !!Apparently the H origin is...
      WRITE(*,*) 'HITCHHIKER(S) ORIGIN IS ON THE LE OF THE CENTERLINE'
      GEOMSPC = .FALSE.
      NGEOMSPC = .FALSE.
      GEOM = .FALSE.
      SPC = .FALSE.
      !This is to check geometry and equal spacing
      IF ((ANS.EQ.'Y').AND.(SPACE.EQ.'Y'))THEN
         GEOMSPC = .TRUE.
      END IF
      IF ((ANS.EQ.'Y').AND.(SPACE.EQ.'N')) THEN
         GEOM = .TRUE.
      END IF
      IF ((ANS.EQ.'N').AND.(SPACE.EQ.'Y')) THEN
         SPC = .TRUE.
      END IF
      IF ((ANS.EQ.'N').AND.(SPACE.EQ.'N')) THEN
         NGEOMSPC = .TRUE.
      END IF
      
      IF (GEOMSPC) THEN
         !!This means that all hitchikers have the same geometry
         !!So you put it on once and that's it
         NNAC = 0
         WRITE(IWRIT,*)'ALL HITCHHIKERS'
         !!Planform data
         SYROOT2 = 0;
         SXRTLE2 = 0.0;
         SXRTTE2 = 1.5;
         SYTIP2 = 1.4121;
         SXTIPLE2 = 1.91421;
         SXTIPTE2 = 2.41421;
         !!Wing sections
         SNSPAN2 = 10;
         SNCHRD2 = 10;
         !!INPUT LOCATION OF EACH HITCHHIKER ORIGIN WRT
         !!MOTHERSHIP ORIGIN, X, Y, Z, FOR HITCHIKER:'//,
         !!CAREFUL, MOTHERSHIP OR HITCHHIKER(S)'//,
         !!TRAILING VORTICES CANNOT INTERSECT HITCHHIKER(S) CP'//,
         XSTR = 3.91421;
         YSTR = 2.8242;
         ZSTR = 0;
C     
C     XSTRH,YSTRH,ZSTRH ARE COUNTERS
C     
         XSTRH = 0.0
         YSTRH = 0.0
         ZSTRH = 0.0
C     
         !This is just a do loop that calculates position and 
         !geometry for all aircrafts
      DO 601 NNAC = 1,NAC
         YROOT2(NNAC) = SYROOT2
         XRTLE2(NNAC) = SXRTLE2
         XRTTE2(NNAC) = SXRTTE2
         YTIP2(NNAC) = SYTIP2
         XTIPLE2(NNAC) = SXTIPLE2
         XTIPTE2(NNAC) = SXTIPTE2
         NSPAN2(NNAC) = SNSPAN2
         NCHRD2(NNAC) = SNCHRD2
         XNSPAN2(NNAC) = NSPAN2(NNAC)
         XSTAR(NNAC) = XSTRH + XSTR
         XSTRH = XSTAR(NNAC)
         YSTAR(NNAC) = YSTRH + YSTR
         YSTRH = YSTAR(NNAC)
         ZSTAR(NNAC) = ZSTRH + ZSTR
         ZSTRH = ZSTAR(NNAC)
         XNCHRD2(NNAC) = NCHRD2(NNAC)
         DXDYLE2(NNAC) = ((XTIPLE2(NNAC) - XRTLE2(NNAC)))/
     &        (YTIP2(NNAC) - YROOT2(NNAC))
         DXDYTE2(NNAC) = ((XTIPTE2(NNAC) - XRTTE2(NNAC)))
     &        /(YTIP2(NNAC) - YROOT2(NNAC))
 601  CONTINUE
      END IF

      !!This then computes other properties for the two
      !!aircraft

!      CCC   
C     PLANFORM PROPERTIES FOR MOTHERSHIP: AIRCRAFT 1
C     
      CROOT1 = XRTTE1- XRTLE1
      CTIP1 = XTIPTE1 - XTIPLE1
      B21 = YTIP1 - YROOT1
      SREF1 = (CROOT1+ CTIP1)*B21
      AR1 = (2.0*B21)**2/SREF1
      XLESWP1 = 180./PI*ATAN(DXDYLE1)
      XTESWP1 = 180./PI*ATAN(DXDYTE1)
      TAPER1 = CTIP1/CROOT1
      CAV1 = SREF1/(2.*B21)
      XREF1 = XRTLE1
      CREF1 = SREF1/(2.*B21)
      WRITE(*,1045)
      WRITE(*,1050) SREF1,AR1,XLESWP1,XTESWP1,TAPER1

C     PLANFORM PROPERTIES FOR HITCHHIKER: AIRCRAFT 2
C     
      NNAC = 0
      DO 604 NNAC = 1,NAC
      CROOT2(NNAC) = XRTTE2(NNAC) - XRTLE2(NNAC)
      CTIP2(NNAC) = XTIPTE2(NNAC) - XTIPLE2(NNAC)
      B22(NNAC) = YTIP2(NNAC) - YROOT2(NNAC)
      SREF2(NNAC) = (CROOT2(NNAC) + CTIP2(NNAC))*B22(NNAC)
      AR2(NNAC) = (2.*B22(NNAC))**2/SREF2(NNAC)
      XLESWP2(NNAC) = 180./PI*ATAN(DXDYLE2(NNAC))
      XTESWP2(NNAC) = 180./PI*ATAN(DXDYTE2(NNAC))
      TAPER2(NNAC) = CTIP2(NNAC)/CROOT2(NNAC)
      CAV2(NNAC) = SREF2(NNAC)/(2.*B22(NNAC))
      XREF2(NNAC) = XRTLE2(NNAC)
      CREF2(NNAC) = SREF2(NNAC)/(2.*B22(NNAC))
      WRITE(*,1046)NNAC
      WRITE(*,1055) SREF2(NNAC),AR2(NNAC),XLESWP2(NNAC),
     &     XTESWP2(NNAC),TAPER2(NNAC)
 604  CONTINUE

      !This will split the mothership into spaces according to the number
      !of sections defined

      WRITE(*,1070)
      DELTAY1 = (YTIP1 - YROOT1)/XNSPAN1
      N = 0
      DO 50 NS = 1,NSPAN1
      XNS1 = NS
      YINBD1 = YROOT + (XNS1 - 1.0)*DELTAY1
      YOUTBD1 = YINBD1 + DELTAY1
      YCPTG1 = YINBD1 + DELTAY1/2.
      X1LEG1 = XRTLE1 + (YINBD1 - YROOT1)*DXDYLE1
      X2LEG1 = XRTLE1 + (YOUTBD1 - YROOT1)*DXDYLE1
      X1TEG1 = XRTTE1 + (YINBD1 - YRROT1)*DXDYTE1
      X2TEG1 = XRTTE1 + (YOUTBD1 - YROOT1)*DXDYTE1
      XCPTLE1 = XRTLE1 + (YCPTG1 - YROOT1)*DXDYLE1
      XCPTTE1 = XRTTE1 + (YCPTG1 - YROOT1)*DXDYTE1
      C11   = X1TEG1 - X1LEG1
      C21 = X2TEG1 - X2LEG1
      CCPT1 = XCPTTE1 - XCPTLE1
      CHRD1(NS) = CCPT1
      DELC11 = C11/XNCHRD1
      DELC21 = C21/XNCHRD1
      DELCPT1 = CCPT1/XNCHRD1
      DO 50 NC = 1,NCHRD1
      N = N + 1
      XNC1 = NC
      Z11(N) = 0.0
      Z21(N) = 0.0
      ZCPT1(N) = 0.0
      Y11(N) = YINBD1
      Y21(N) = YOUTBD1
      YCPT1(N) = YCPTG1
      X11(N) = X1LEG1 + (XNC1 - 1.0)*DELC11 + 0.25*DELC11
      X21(N) = X2LEG1 + (XNC1 - 1.0)*DELC21 + 0.25*DELC21
      XCPT1(N) = XCPTLE1 + (XNC1 - 1.0)*DELCPT1 + 0.75*DELCPT1
      XVCPT1(N) = XCPT1(N) - .5*DELCPT1
      WRITE(*,1040) N,Y11(N),Y21(N),X11(N),X21(N),XCPT1(N),YCPT1(N)
 50   CONTINUE



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

 99   FORMAT (A1)
 1000 FORMAT(//5X,'VORTEX LATTICE PROGRAM:'//5X,
     & 'COMPOUND AIRCRAFT TRANSPORT'/)
 1010 FORMAT(/'INPUT YROOT,XRTLE,XRTTE FOR MOTHERSHIP: AIRCRAFT 1'/)
 1020 FORMAT(/'INPUT YTIP,XTIPLE,XTIPTE FOR MOTHERSHIP: AIRCRAFT 1'/)
 1030 FORMAT(/'INPUT NSPAN AND NCHRD FOR MOTHERSHIP: AIRCRAFT 1'/)
 1015 FORMAT(/'INPUT YROOT,XRTLE,XRTTE FOR HITCHHIKER:', I3/)
 1016 FORMAT(/'HITCHHIKER(S) ORIGIN IS ON THE LE OF THE CENTERLINE'/)
 1017 FORMAT(/'NUMBER OF HITCHIKER AIRCRAFT WRT SYMMETRY, NAC'/)
 1018 FORMAT(/'DO ALL HITCHHIKER(S) HAVE SAME GEOMETRY?'/)
 1019 FORMAT(/'ARE ALL HITCHIKER(S) SPACED EVENLY?'/)
 1021 FORMAT(/'TO ANSWER YES, TYPE: Y and TO ANSWER NO, TYPE: N'/)
 1025 FORMAT(/'INPUT YTIP,XTIPLE,XTIPTE FOR HITCHHIKER:', I3/)
 1035 FORMAT(/'INPUT NSPAN AND NCHRD FOR HITCHHIKER:',I3/)
 1036 FORMAT(/'INPUT LOCATION OF EACH HITCHHIKER ORIGIN WRT'//,
     & 'MOTHERSHIP ORIGIN, X, Y, Z, FOR HITCHIKER:'//,
     & 'CAREFUL, MOTHERSHIP OR HITCHHIKER(S)'//,
     & 'TRAILING VORTICES CANNOT INTERSECT HITCHHIKER(S) CP'//,
     & I3/)
 1040 FORMAT(I5,6F12.6)
 1045 FORMAT(/'PLANFORM PROPERTIES FOR MOTHERSHIP: AIRCRAFT 1'/)
 1050 FORMAT(//5X,'SREF = ',F12.4,5X,'AR = ',F7.3/
     & /5X,'LE SWEEP = ',F12.5,5X,'TE SWEEP = ',F10.5/
     & /5X,'TAPER RATIO = ',F7.4/)
 1046 FORMAT(/'PLANFORM PROPERTIES FOR HITCHHIKER(S):',I3/)
 1055 FORMAT(//5X,'SREF = ',F12.4,5X,'AR = ',F7.3/
     & /5X,'LE SWEEP = ',F12.5,5X,'TE SWEEP = ',F10.5/
     & /5X,'TAPER RATIO = ',F7.4/)
 1056 FORMAT(//5X,'MOTHERSHIP or HITCHHIKER TRAILING VORTICES
     & INTERSECT HITCHHIKER(S) CP'//,
     & 'PROGRAM WILL BE TERMINATED'/)
 1060 FORMAT(/10X,'CL ALPHA PER RAD. = ',F7.4/
     & 10X,'CM ALPHA PER RAD. = ',F7.4/
     & 10X,'CDI ALPHA PER RAD. =',F7.4/)
 1061 FORMAT(//3X'COEFFICIENTS FOR MOTHERSHIP: AIRCRAFT 1'//3X)
 1062 FORMAT(//3X'COEFFICIENTS FOR HITCHHIKER(S): ',I3//3X)
 1070 FORMAT(//3X,'PANEL DATA FOR MOTHERSHIP: AIRCRAFT 1'//3X,' N
     & Y1 Y2 ',4X,
     & ' X1 X2 XCPT YCPT')
 1075 FORMAT(//3X,'PANEL DATA FOR HITCHHIKER(S):',I3//3X,' N
     & Y1 Y2 ',4X,
     & ' X1 X2 XCPT YCPT')
 1076 FORMAT(//3X,'PANEL DATA FOR ENTIRE SYSTEM'//3X,' N
     & Y1 Y2 ',4X,
     & ' X1 X2 XCPT YCPT')
 1081 FORMAT(//3X'GAMMA FOR MOTHERSHIP: AIRCRAFT 1'//3X)
 1082 FORMAT(//3X'GAMMA FOR HITCHHIKER(S): ',I3//3X)
 1080 FORMAT(//3X'RESULTS: GAMMA'//5X,'N',9X,'GAMMA')
 1083 FORMAT(//3X'DOWNWASH FOR MOTHERSHIP: AIRCRAFT 1'//3X)
 1084 FORMAT(//3X'DOWNWASH FOR HITCHHIKER(S): ',I3//3X)
 1085 FORMAT(//3X'RESULTS: DOWNWASH'//5X,'N',9X,'DOWNWASH')
 1120 FORMAT(/4X,'NS',7X,'Y',7X,'ETA',8X,'CL -LOC',7X,'CCLCA',
     & 7X,'CDI-LOC')
 1121 FORMAT(//3X 'SECTIONAL CHARACTERISTICS FOR MOTHERSHIP:
     & AIRCRAFT 1'//3X)
 1122 FORMAT(//3X 'SECTIONAL CHARACTERISTICS FOR HITCHHIKER(S):
     & ',I3//3X)
 1140 FORMAT(4X,I2,3X,F7.3,3X,F7.4,2X,F11.5,2X,F11.5,2X,F11.5)
 1141 FORMAT(4X,I2,3X,F7.3,3X,F7.4,2X,F11.5,2X,F11.5,2X,
     & F11.5,2X,F11.5)

      CLOSE(UNIT = 1)
      CLOSE(UNIT = 2)
      CLOSE(UNIT = 3)
      CLOSE(UNIT = 4)
      END
